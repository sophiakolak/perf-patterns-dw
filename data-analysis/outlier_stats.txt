67
68
69
2006:{'type': 'Module', 'children': [1]}
2006:{'type': 'ClassDef', 'children': [2, 4, 28], 'value': 'Solution'}
2006:{'type': 'NameLoad', 'value': 'object'}
2006:{'type': 'FunctionDef', 'children': [6, 11, 27], 'value': 'removeDuplicates'}
2006:{'type': 'arguments', 'children': [7, 10]}
2006:{'type': 'NameParam', 'value': 'self'}
2006:{'type': 'defaults'}
2006:{'type': 'body', 'children': [12, 23]}
2006:{'type': 'SubscriptStore', 'children': [14, 15]}
2006:{'type': 'NameLoad', 'value': 'nums'}
2006:{'type': 'NameLoad', 'value': 'list'}
2006:{'type': 'NameLoad', 'value': 'set'}
2008:{'type': 'NameLoad', 'value': 'object'}
2008:{'type': 'args', 'children': [8, 9]}
2008:{'type': 'NameLoad', 'value': 'nums'}
2008:{'type': 'Index', 'children': [34]}
2008:{'type': 'body', 'children': [38]}
2008:{'type': 'orelse', 'children': [42, 51, 54]}
2009:{'type': 'NameLoad', 'value': 'nums'}
2009:{'type': 'NameLoad', 'value': 'i'}
2010:{'type': 'args', 'children': [8, 9]}
2010:{'type': 'SubscriptLoad', 'children': [23, 24]}
2010:{'type': 'AugAssignAdd', 'children': [36, 37]}
2010:{'type': 'Num', 'value': '1'}
2011:{'type': 'If', 'children': [20, 26]}
2011:{'type': 'SubscriptLoad', 'children': [23, 24]}
2021:{'type': 'SubscriptLoad', 'children': [27, 28]}
2021:{'type': 'BinOpAdd', 'children': [34, 35]}
2021:{'type': 'BinOpSub', 'children': [43, 46]}
2021:{'type': 'NameLoad', 'value': 'nums'}
2021:{'type': 'Num', 'value': '1'}
2022:{'type': 'NameLoad', 'value': 'object'}
2022:{'type': 'CompareNotEq', 'children': [39, 40]}
2022:{'type': 'NameLoad', 'value': 'current'}
2022:{'type': 'SubscriptLoad', 'children': [55, 56]}
2025:{'type': 'SubscriptLoad', 'children': [45, 46]}
2025:{'type': 'Index', 'children': [47]}
2031:{'type': 'Assign', 'children': [13, 14]}
2031:{'type': 'Return', 'children': [49]}
2034:{'type': 'Call', 'children': [56, 57]}
2035:{'type': 'Num', 'value': '1'}
2037:{'type': 'ClassDef', 'children': [2, 4, 40], 'value': 'Solution'}
2037:{'type': 'FunctionDef', 'children': [6, 11, 39], 'value': 'removeDuplicates'}
2037:{'type': 'args', 'children': [8, 9]}
2037:{'type': 'NameParam', 'value': 'self'}
2037:{'type': 'For', 'children': [16, 17, 18]}
2037:{'type': 'NameStore', 'value': 'i'}
2037:{'type': 'body', 'children': [19]}
2037:{'type': 'orelse', 'children': [26]}
2037:{'type': 'NameLoad', 'value': 'sol'}
2037:{'type': 'NameLoad', 'value': 'i'}
2037:{'type': 'Slice'}
2037:{'type': 'NameLoad', 'value': 'sol'}
2040:{'type': 'FunctionDef', 'children': [6, 11, 51], 'value': 'removeDuplicates'}
2040:{'type': 'NameParam', 'value': 'self'}
2040:{'type': 'NameParam', 'value': 'nums'}
2040:{'type': 'body', 'children': [12, 15, 30, 47]}
2040:{'type': 'NameLoad', 'value': 'nums'}
2040:{'type': 'body', 'children': [19]}
2040:{'type': 'If', 'children': [20, 23]}
2040:{'type': 'NameLoad', 'value': 'i'}
2040:{'type': 'NameStore', 'value': 'i'}
2040:{'type': 'NameLoad', 'value': 'n'}
2040:{'type': 'NameLoad', 'value': 'nums'}
2040:{'type': 'NameLoad', 'value': 'n'}
2040:{'type': 'Index', 'children': [46]}
2040:{'type': 'NameLoad', 'value': 'i'}
2040:{'type': 'Return', 'children': [48]}
2043:{'type': 'NameLoad', 'value': 'object'}
2043:{'type': 'arguments', 'children': [7, 10]}
2043:{'type': 'args', 'children': [8, 9]}
2043:{'type': 'body', 'children': [27]}
2043:{'type': 'Expr', 'children': [34]}
2043:{'type': 'NameLoad', 'value': 'nums'}
2046:{'type': 'body', 'children': [12, 15, 18, 42]}
2046:{'type': 'Assign', 'children': [13, 14]}
2046:{'type': 'For', 'children': [19, 20, 21]}
2046:{'type': 'Expr', 'children': [28]}
2050:{'type': 'bases', 'children': [3]}
2050:{'type': 'body', 'children': [12, 15, 18, 55]}
2050:{'type': 'Assign', 'children': [13, 14]}
2050:{'type': 'NameStore', 'value': 'temp'}
2050:{'type': 'Assign', 'children': [16, 17]}
2050:{'type': 'NameStore', 'value': 'i'}
2050:{'type': 'CompareLt', 'children': [20, 21]}
2050:{'type': 'Call', 'children': [22, 23]}
2050:{'type': 'NameLoad', 'value': 'nums'}
2050:{'type': 'NameLoad', 'value': 'temp'}
2050:{'type': 'AttributeLoad', 'children': [36, 37]}
2050:{'type': 'NameLoad', 'value': 'temp'}
2050:{'type': 'SubscriptLoad', 'children': [39, 40]}
2050:{'type': 'NameLoad', 'value': 'nums'}
2050:{'type': 'Expr', 'children': [44]}
2050:{'type': 'NameLoad', 'value': 'nums'}
2050:{'type': 'attr', 'value': 'pop'}
2050:{'type': 'NameLoad', 'value': 'i'}
2050:{'type': 'AugAssignAdd', 'children': [53, 54]}
2050:{'type': 'Num', 'value': '1'}
2050:{'type': 'Return', 'children': [56]}
2050:{'type': 'Call', 'children': [57, 58]}
2050:{'type': 'NameLoad', 'value': 'nums'}
2054:{'type': 'NameLoad', 'value': 'len'}
2054:{'type': 'NameLoad', 'value': 'i'}
2054:{'type': 'NameStore', 'value': 'l'}
2054:{'type': 'Call', 'children': [77, 78]}
2061:{'type': 'ClassDef', 'children': [2, 4, 43], 'value': 'Solution'}
2061:{'type': 'attr', 'value': 'clear'}
2061:{'type': 'CompareNotIn', 'children': [29, 30]}
2061:{'type': 'NameLoad', 'value': 'x'}
2061:{'type': 'NameLoad', 'value': 'nums'}
2061:{'type': 'NameLoad', 'value': 'x'}
2061:{'type': 'Return', 'children': [39]}
2061:{'type': 'Call', 'children': [40, 41]}
2071:{'type': 'NameLoad', 'value': 'len'}
2071:{'type': 'Num', 'value': '0'}
2071:{'type': 'NameStore', 'value': 'last_item'}
2071:{'type': 'Return', 'children': [31]}
2071:{'type': 'NameLoad', 'value': 'nums'}
2071:{'type': 'Assign', 'children': [47, 48]}
2071:{'type': 'SubscriptLoad', 'children': [49, 50]}
2071:{'type': 'Call', 'children': [59, 62]}
2071:{'type': 'NameLoad', 'value': 'nums'}
2071:{'type': 'Return', 'children': [68]}
2933:{'type': 'NameLoad', 'value': 'i'}
2934:{'type': 'NameLoad', 'value': 'object'}
2934:{'type': 'NameLoad', 'value': 'nums'}
2934:{'type': 'NameLoad', 'value': 'nums'}
2996:{'type': 'body', 'children': [5]}
72
2117:{'type': 'Module', 'children': [1]}
2117:{'type': 'ClassDef', 'children': [2, 4, 80], 'value': 'Solution'}
2117:{'type': 'bases', 'children': [3]}
2117:{'type': 'NameLoad', 'value': 'object'}
2117:{'type': 'body', 'children': [5]}
2117:{'type': 'args', 'children': [8, 9]}
2117:{'type': 'NameParam', 'value': 'self'}
2117:{'type': 'defaults'}
2117:{'type': 'FunctionDef', 'children': [13, 17, 74], 'value': 'trap'}
2117:{'type': 'arguments', 'children': [14, 16]}
2117:{'type': 'args', 'children': [15]}
2117:{'type': 'defaults'}
2117:{'type': 'body', 'children': [18, 21, 24, 27, 72]}
2117:{'type': 'NameStore', 'value': 'water'}
2117:{'type': 'Num', 'value': '0'}
2117:{'type': 'Assign', 'children': [22, 23]}
2117:{'type': 'Num', 'value': '0'}
2117:{'type': 'NameStore', 'value': 'right_height_max'}
2117:{'type': 'For', 'children': [28, 29, 36]}
2117:{'type': 'NameLoad', 'value': 'xrange'}
2117:{'type': 'BinOpSub', 'children': [32, 35]}
2117:{'type': 'Call', 'children': [33, 34]}
2117:{'type': 'NameLoad', 'value': 'len'}
2117:{'type': 'NameLoad', 'value': 'heights'}
2117:{'type': 'body', 'children': [37, 47, 53, 61]}
2117:{'type': 'NameStore', 'value': 'right_height_max'}
2117:{'type': 'Call', 'children': [40, 41]}
2117:{'type': 'NameLoad', 'value': 'max'}
2117:{'type': 'SubscriptLoad', 'children': [42, 43]}
2117:{'type': 'NameLoad', 'value': 'i'}
2117:{'type': 'SubscriptLoad', 'children': [50, 51]}
2117:{'type': 'NameLoad', 'value': 'heights'}
2117:{'type': 'Index', 'children': [52]}
2117:{'type': 'NameLoad', 'value': 'i'}
2117:{'type': 'If', 'children': [54, 57]}
2117:{'type': 'CompareGt', 'children': [55, 56]}
2117:{'type': 'NameLoad', 'value': 'curr_height'}
2117:{'type': 'NameLoad', 'value': 'left_height_max'}
2117:{'type': 'body', 'children': [58]}
2117:{'type': 'Assign', 'children': [59, 60]}
2117:{'type': 'NameStore', 'value': 'left_height_max'}
2117:{'type': 'NameLoad', 'value': 'max'}
2117:{'type': 'BinOpSub', 'children': [66, 70]}
2117:{'type': 'Call', 'children': [67, 68, 69]}
2117:{'type': 'NameLoad', 'value': 'left_height_max'}
2117:{'type': 'NameLoad', 'value': 'curr_height'}
2117:{'type': 'NameLoad', 'value': 'water'}
2117:{'type': 'decorator_list'}
2117:{'type': 'Return', 'children': [76]}
2117:{'type': 'Call', 'children': [77, 78]}
2118:{'type': 'NameLoad', 'value': 'object'}
2118:{'type': 'FunctionDef', 'children': [6, 11, 66], 'value': 'trap'}
2118:{'type': 'NameLoad', 'value': 'height'}
2118:{'type': 'SubscriptLoad', 'children': [24, 25]}
2118:{'type': 'Num', 'value': '0'}
2118:{'type': 'NameLoad', 'value': 'xrange'}
2118:{'type': 'Call', 'children': [39, 40, 41]}
2118:{'type': 'Index', 'children': [44]}
2118:{'type': 'NameStore', 'value': 'max_r'}
2118:{'type': 'NameLoad', 'value': 'height'}
2118:{'type': 'Index', 'children': [63]}
2118:{'type': 'Return', 'children': [65]}
2119:{'type': 'Module', 'children': [1]}
2119:{'type': 'body', 'children': [5]}
2119:{'type': 'args', 'children': [8, 9]}
2119:{'type': 'Assign', 'children': [13, 14]}
2119:{'type': 'TupleStore', 'children': [32, 33]}
2119:{'type': 'NameStore', 'value': 'i'}
2119:{'type': 'NameLoad', 'value': 'enumerate'}
2119:{'type': 'NameLoad', 'value': 'height'}
2119:{'type': 'SubscriptLoad', 'children': [46, 47]}
2119:{'type': 'Slice', 'children': [48]}
2119:{'type': 'NameLoad', 'value': 'i'}
2119:{'type': 'NameLoad', 'value': 'h'}
2119:{'type': 'body', 'children': [60]}
2119:{'type': 'Call', 'children': [64, 65, 66]}
2119:{'type': 'orelse', 'children': [69]}
2119:{'type': 'CompareGt', 'children': [71, 72]}
2119:{'type': 'body', 'children': [74]}
2119:{'type': 'Assign', 'children': [75, 76]}
2119:{'type': 'NameLoad', 'value': 'h'}
2119:{'type': 'decorator_list'}
2120:{'type': 'args', 'children': [8, 9]}
2120:{'type': 'NameParam', 'value': 'self'}
2120:{'type': 'defaults'}
2120:{'type': 'Assign', 'children': [16, 17]}
2120:{'type': 'IfExp', 'children': [18, 19, 23]}
2120:{'type': 'NameLoad', 'value': 'height'}
2120:{'type': 'NameLoad', 'value': 'height'}
2120:{'type': 'Num', 'value': '0'}
2120:{'type': 'Num', 'value': '0'}
2120:{'type': 'Assign', 'children': [25, 26]}
2120:{'type': 'Num', 'value': '0'}
2120:{'type': 'NameStore', 'value': 'i'}
2120:{'type': 'NameLoad', 'value': 'enumerate'}
2120:{'type': 'Assign', 'children': [36, 37]}
2120:{'type': 'NameStore', 'value': 'left_mx'}
2120:{'type': 'NameLoad', 'value': 'max'}
2120:{'type': 'NameLoad', 'value': 'left_mx'}
2120:{'type': 'Assign', 'children': [42, 43]}
2120:{'type': 'SubscriptLoad', 'children': [46, 47]}
2120:{'type': 'BinOpSub', 'children': [52, 56]}
2120:{'type': 'Call', 'children': [53, 54, 55]}
2120:{'type': 'NameLoad', 'value': 'left_mx'}
2120:{'type': 'If', 'children': [58, 61]}
2120:{'type': 'Num', 'value': '0'}
2120:{'type': 'body', 'children': [62]}
2120:{'type': 'AugAssignAdd', 'children': [63, 64]}
2120:{'type': 'NameLoad', 'value': 'tmp_trap'}
2120:{'type': 'Return', 'children': [66]}
2120:{'type': 'NameLoad', 'value': 'trap'}
2120:{'type': 'decorator_list'}
2124:{'type': 'ClassDef', 'children': [2, 4, 84], 'value': 'Solution'}
2124:{'type': 'arguments', 'children': [7, 10]}
2124:{'type': 'NameParam', 'value': 'self'}
2124:{'type': 'defaults'}
2124:{'type': 'Assign', 'children': [13, 14]}
2124:{'type': 'Assign', 'children': [16, 17]}
2124:{'type': 'NameStore', 'value': 'previous_height'}
2124:{'type': 'Num', 'value': '0'}
2124:{'type': 'BinOpSub', 'children': [27, 30]}
2124:{'type': 'NameLoad', 'value': 'len'}
2124:{'type': 'Num', 'value': '1'}
2124:{'type': 'body', 'children': [32, 43, 53, 59, 67, 73]}
2124:{'type': 'Assign', 'children': [33, 34]}
2124:{'type': 'NameStore', 'value': 'previous_height'}
2124:{'type': 'Call', 'children': [35, 36, 42]}
2124:{'type': 'NameLoad', 'value': 'max'}
2124:{'type': 'NameLoad', 'value': 'height'}
2124:{'type': 'NameStore', 'value': 'next_height'}
2124:{'type': 'NameLoad', 'value': 'max'}
2124:{'type': 'NameLoad', 'value': 'i'}
2124:{'type': 'Num', 'value': '1'}
2124:{'type': 'NameStore', 'value': 'current_capacity'}
2124:{'type': 'BinOpSub', 'children': [62, 66]}
2124:{'type': 'Call', 'children': [63, 64, 65]}
2124:{'type': 'NameLoad', 'value': 'min'}
2124:{'type': 'NameLoad', 'value': 'previous_height'}
2124:{'type': 'Print', 'children': [68, 69, 70, 71, 72]}
2124:{'type': 'NameLoad', 'value': 'next_height'}
2124:{'type': 'NameLoad', 'value': 'current_height'}
2124:{'type': 'NameLoad', 'value': 'current_capacity'}
2124:{'type': 'Num', 'value': '0'}
2124:{'type': 'body', 'children': [78]}
2124:{'type': 'Return', 'children': [82]}
2124:{'type': 'NameLoad', 'value': 'total_capacity'}
2124:{'type': 'decorator_list'}
2125:{'type': 'bases', 'children': [3]}
2125:{'type': 'NameLoad', 'value': 'object'}
2125:{'type': 'body', 'children': [5]}
2125:{'type': 'args', 'children': [8, 9]}
2125:{'type': 'NameParam', 'value': 'self'}
2125:{'type': 'defaults'}
2125:{'type': 'body', 'children': [12, 17, 24, 30, 33, 78]}
2125:{'type': 'Assign', 'children': [13, 14]}
2125:{'type': 'NameStore', 'value': 'n'}
2125:{'type': 'NameLoad', 'value': 'len'}
2125:{'type': 'NameLoad', 'value': 'n'}
2125:{'type': 'body', 'children': [22]}
2125:{'type': 'Assign', 'children': [25, 26]}
2125:{'type': 'NameStore', 'value': 'maxL'}
2125:{'type': 'SubscriptLoad', 'children': [27, 28]}
2125:{'type': 'Index', 'children': [29]}
2125:{'type': 'Num', 'value': '0'}
2125:{'type': 'Assign', 'children': [31, 32]}
2125:{'type': 'NameStore', 'value': 'vol'}
2125:{'type': 'Num', 'value': '0'}
2125:{'type': 'For', 'children': [34, 35, 41]}
2125:{'type': 'NameStore', 'value': 'i'}
2125:{'type': 'Call', 'children': [36, 37, 38]}
2125:{'type': 'Num', 'value': '1'}
2125:{'type': 'BinOpSub', 'children': [39, 40]}
2125:{'type': 'NameLoad', 'value': 'n'}
2125:{'type': 'Num', 'value': '1'}
2125:{'type': 'body', 'children': [42, 52, 63, 69]}
2125:{'type': 'NameStore', 'value': 'maxR'}
2125:{'type': 'Call', 'children': [45, 46]}
2125:{'type': 'SubscriptLoad', 'children': [47, 48]}
2125:{'type': 'NameLoad', 'value': 'height'}
2125:{'type': 'BinOpAdd', 'children': [50, 51]}
2125:{'type': 'NameLoad', 'value': 'i'}
2125:{'type': 'Num', 'value': '1'}
2125:{'type': 'Assign', 'children': [53, 54]}
2125:{'type': 'Call', 'children': [56, 57, 58]}
2125:{'type': 'NameLoad', 'value': 'min'}
2125:{'type': 'NameLoad', 'value': 'maxR'}
2125:{'type': 'NameLoad', 'value': 'height'}
2125:{'type': 'Index', 'children': [62]}
2125:{'type': 'AugAssignAdd', 'children': [64, 65]}
2125:{'type': 'Num', 'value': '0'}
2125:{'type': 'NameLoad', 'value': 'vi'}
2125:{'type': 'NameStore', 'value': 'maxL'}
2125:{'type': 'Call', 'children': [72, 73, 74]}
2125:{'type': 'SubscriptLoad', 'children': [75, 76]}
2125:{'type': 'NameLoad', 'value': 'height'}
2125:{'type': 'Index', 'children': [77]}
2125:{'type': 'NameLoad', 'value': 'i'}
2125:{'type': 'Return', 'children': [79]}
2125:{'type': 'NameLoad', 'value': 'vol'}
2129:{'type': 'body', 'children': [5]}
2129:{'type': 'Num', 'value': '0'}
2129:{'type': 'For', 'children': [19, 22, 25]}
2129:{'type': 'TupleStore', 'children': [20, 21]}
2129:{'type': 'NameStore', 'value': 'i'}
2129:{'type': 'NameLoad', 'value': 'height'}
2129:{'type': 'body', 'children': [26, 32, 45]}
2129:{'type': 'NameStore', 'value': 'left_max'}
2129:{'type': 'Call', 'children': [35, 36]}
2129:{'type': 'SubscriptLoad', 'children': [38, 39]}
2129:{'type': 'NameLoad', 'value': 'i'}
2129:{'type': 'Num', 'value': '1'}
2129:{'type': 'NameLoad', 'value': 'max'}
2129:{'type': 'BinOpSub', 'children': [51, 55]}
2129:{'type': 'Call', 'children': [52, 53, 54]}
2129:{'type': 'NameLoad', 'value': 'min'}
2129:{'type': 'NameLoad', 'value': 'left_max'}
2129:{'type': 'Index', 'children': [58]}
2129:{'type': 'NameLoad', 'value': '_sum'}
2130:{'type': 'NameLoad', 'value': 'object'}
2130:{'type': 'FunctionDef', 'children': [6, 11, 66], 'value': 'trap'}
2130:{'type': 'args', 'children': [8, 9]}
2130:{'type': 'NameParam', 'value': 'self'}
2130:{'type': 'defaults'}
2130:{'type': 'body', 'children': [12, 15, 64]}
2130:{'type': 'NameStore', 'value': 'ans'}
2130:{'type': 'NameLoad', 'value': 'height'}
2130:{'type': 'Assign', 'children': [21, 22]}
2130:{'type': 'NameStore', 'value': 'lmax'}
2130:{'type': 'NameLoad', 'value': 'height'}
2130:{'type': 'For', 'children': [27, 28, 33]}
2130:{'type': 'NameStore', 'value': 'i'}
2130:{'type': 'Call', 'children': [31, 32]}
2130:{'type': 'NameLoad', 'value': 'height'}
2130:{'type': 'body', 'children': [34, 48]}
2130:{'type': 'If', 'children': [35, 41]}
2130:{'type': 'NameLoad', 'value': 'lmax'}
2130:{'type': 'SubscriptLoad', 'children': [38, 39]}
2130:{'type': 'Index', 'children': [40]}
2130:{'type': 'body', 'children': [42]}
2130:{'type': 'NameStore', 'value': 'lmax'}
2130:{'type': 'SubscriptLoad', 'children': [45, 46]}
2130:{'type': 'NameLoad', 'value': 'i'}
2130:{'type': 'BinOpSub', 'children': [51, 60]}
2130:{'type': 'Call', 'children': [55, 56]}
2130:{'type': 'NameLoad', 'value': 'height'}
2130:{'type': 'Slice', 'children': [59]}
2130:{'type': 'SubscriptLoad', 'children': [61, 62]}
2130:{'type': 'Index', 'children': [63]}
2130:{'type': 'NameLoad', 'value': 'i'}
2130:{'type': 'NameLoad', 'value': 'ans'}
2131:{'type': 'NameLoad', 'value': 'object'}
2131:{'type': 'FunctionDef', 'children': [6, 11, 77], 'value': 'trap'}
2131:{'type': 'args', 'children': [8, 9]}
2131:{'type': 'NameParam', 'value': 'self'}
2131:{'type': 'defaults'}
2131:{'type': 'Assign', 'children': [13, 14]}
2131:{'type': 'NameStore', 'value': 'total_capacity'}
2131:{'type': 'Num', 'value': '0'}
2131:{'type': 'For', 'children': [22, 23, 31]}
2131:{'type': 'Call', 'children': [24, 25, 26]}
2131:{'type': 'NameLoad', 'value': 'xrange'}
2131:{'type': 'NameLoad', 'value': 'len'}
2131:{'type': 'Num', 'value': '1'}
2131:{'type': 'NameStore', 'value': 'previous_height'}
2131:{'type': 'Call', 'children': [35, 36, 42]}
2131:{'type': 'NameLoad', 'value': 'height'}
2131:{'type': 'Call', 'children': [46, 47]}
2131:{'type': 'NameLoad', 'value': 'max'}
2131:{'type': 'BinOpAdd', 'children': [51, 52]}
2131:{'type': 'SubscriptLoad', 'children': [56, 57]}
2131:{'type': 'Index', 'children': [58]}
2131:{'type': 'NameLoad', 'value': 'i'}
2131:{'type': 'Call', 'children': [63, 64, 65]}
2131:{'type': 'NameLoad', 'value': 'current_height'}
2131:{'type': 'NameLoad', 'value': 'current_capacity'}
2131:{'type': 'body', 'children': [72]}
2131:{'type': 'Return', 'children': [76]}
2131:{'type': 'NameLoad', 'value': 'total_capacity'}
2131:{'type': 'decorator_list'}
2132:{'type': 'NameLoad', 'value': 'object'}
2132:{'type': 'defaults'}
2132:{'type': 'Num', 'value': '0'}
2132:{'type': 'NameLoad', 'value': 'height'}
2132:{'type': 'NameLoad', 'value': 'i'}
2132:{'type': 'CompareEq', 'children': [38, 39]}
2132:{'type': 'Call', 'children': [41, 42]}
2132:{'type': 'SubscriptLoad', 'children': [51, 52]}
2132:{'type': 'NameLoad', 'value': 'i'}
2132:{'type': 'BinOpSub', 'children': [61, 65]}
2132:{'type': 'NameLoad', 'value': 'right_max'}
2132:{'type': 'NameLoad', 'value': 'e'}
2132:{'type': 'Return', 'children': [68]}
3001:{'type': 'bases', 'children': [3]}
3001:{'type': 'NameLoad', 'value': 'object'}
3001:{'type': 'FunctionDef', 'children': [6, 11, 99], 'value': 'trap'}
3001:{'type': 'arguments', 'children': [7, 10]}
3001:{'type': 'NameParam', 'value': 'height'}
3001:{'type': 'defaults'}
3001:{'type': 'ListLoad'}
3001:{'type': 'NameStore', 'value': 'post_max'}
3001:{'type': 'ListLoad'}
3001:{'type': 'Assign', 'children': [19, 20]}
3001:{'type': 'NameStore', 'value': 'left_max'}
3001:{'type': 'Num', 'value': '0'}
3001:{'type': 'NameStore', 'value': 'right_max'}
3001:{'type': 'Num', 'value': '0'}
3001:{'type': 'NameLoad', 'value': 'xrange'}
3001:{'type': 'NameLoad', 'value': 'len'}
3001:{'type': 'NameLoad', 'value': 'max'}
3001:{'type': 'NameLoad', 'value': 'left_max'}
3001:{'type': 'SubscriptLoad', 'children': [38, 39]}
3001:{'type': 'NameLoad', 'value': 'height'}
3001:{'type': 'Index', 'children': [40]}
3001:{'type': 'Call', 'children': [43, 46]}
3001:{'type': 'NameLoad', 'value': 'pre_max'}
3001:{'type': 'NameLoad', 'value': 'max'}
3001:{'type': 'NameLoad', 'value': 'right_max'}
3001:{'type': 'SubscriptLoad', 'children': [53, 54]}
3001:{'type': 'Index', 'children': [55]}
3001:{'type': 'BinOpSub', 'children': [56, 58]}
3001:{'type': 'UnaryOpUSub', 'children': [57]}
3001:{'type': 'NameLoad', 'value': 'i'}
3001:{'type': 'Assign', 'children': [60, 61]}
3001:{'type': 'NameStore', 'value': 'post_max'}
3001:{'type': 'NameLoad', 'value': 'post_max'}
3001:{'type': 'Assign', 'children': [66, 67]}
3001:{'type': 'NameStore', 'value': 'ans'}
3001:{'type': 'For', 'children': [69, 70, 75]}
3001:{'type': 'NameStore', 'value': 'i'}
3001:{'type': 'Call', 'children': [71, 72]}
3001:{'type': 'NameLoad', 'value': 'xrange'}
3001:{'type': 'Call', 'children': [73, 74]}
3001:{'type': 'NameLoad', 'value': 'len'}
3001:{'type': 'body', 'children': [76]}
3001:{'type': 'UnaryOpUSub', 'children': [83]}
3001:{'type': 'NameLoad', 'value': 'i'}
3001:{'type': 'NameLoad', 'value': 'min'}
3001:{'type': 'SubscriptLoad', 'children': [90, 91]}
3001:{'type': 'Index', 'children': [92]}
3001:{'type': 'NameLoad', 'value': 'i'}
75
2136:{'type': 'Module', 'children': [1]}
2136:{'type': 'bases', 'children': [3]}
2136:{'type': 'NameLoad', 'value': 'object'}
2136:{'type': 'keyword', 'children': [18], 'value': 'key'}
2136:{'type': 'defaults'}
2136:{'type': 'SubscriptLoad', 'children': [24, 25]}
2136:{'type': 'ListLoad'}
2136:{'type': 'BoolOpAnd', 'children': [36, 39]}
2136:{'type': 'CompareGtE', 'children': [40, 47]}
2136:{'type': 'SubscriptLoad', 'children': [42, 43]}
2136:{'type': 'Num', 'value': '1'}
2136:{'type': 'SubscriptLoad', 'children': [48, 49]}
2136:{'type': 'Index', 'children': [50]}
2136:{'type': 'SubscriptStore', 'children': [54, 58]}
2136:{'type': 'Index', 'children': [59]}
2136:{'type': 'SubscriptLoad', 'children': [63, 67]}
2136:{'type': 'SubscriptLoad', 'children': [64, 65]}
2136:{'type': 'SubscriptLoad', 'children': [70, 71]}
2136:{'type': 'Continue'}
2136:{'type': 'decorator_list'}
2141:{'type': 'Module', 'children': [1]}
2141:{'type': 'NameLoad', 'value': 'object'}
2141:{'type': 'NameParam', 'value': 'intervals'}
2141:{'type': 'defaults'}
2141:{'type': 'body', 'children': [12, 18, 23, 30, 79]}
2141:{'type': 'If', 'children': [13, 15]}
2141:{'type': 'UnaryOpNot', 'children': [14]}
2141:{'type': 'AttributeLoad', 'children': [21, 22]}
2141:{'type': 'NameStore', 'value': 'stack'}
2141:{'type': 'body', 'children': [34, 39, 47]}
2141:{'type': 'Assign', 'children': [35, 38]}
2141:{'type': 'Assign', 'children': [40, 43]}
2141:{'type': 'SubscriptLoad', 'children': [44, 45]}
2141:{'type': 'Index', 'children': [46]}
2141:{'type': 'NameLoad', 'value': 'prev_right'}
2141:{'type': 'body', 'children': [52, 58, 64]}
2141:{'type': 'NameLoad', 'value': 'left'}
2141:{'type': 'Assign', 'children': [59, 60]}
2141:{'type': 'NameStore', 'value': 'right'}
2141:{'type': 'NameLoad', 'value': 'max'}
2141:{'type': 'NameLoad', 'value': 'prev_right'}
2141:{'type': 'SubscriptStore', 'children': [66, 67]}
2141:{'type': 'NameLoad', 'value': 'stack'}
2141:{'type': 'Num', 'value': '-1'}
2141:{'type': 'ListLoad', 'children': [70, 71]}
2141:{'type': 'Expr', 'children': [74]}
2141:{'type': 'Return', 'children': [80]}
2141:{'type': 'decorator_list'}
2144:{'type': 'args', 'children': [8, 9]}
2144:{'type': 'NameParam', 'value': 'self'}
2144:{'type': 'body', 'children': [12, 17, 23, 72]}
2144:{'type': 'Expr', 'children': [13]}
2144:{'type': 'For', 'children': [24, 27, 28]}
2144:{'type': 'NameStore', 'value': 'end'}
2144:{'type': 'NameLoad', 'value': 'start'}
2144:{'type': 'NameLoad', 'value': 'res'}
2144:{'type': 'Num', 'value': '-1'}
2144:{'type': 'AttributeLoad', 'children': [43, 44]}
2144:{'type': 'NameLoad', 'value': 'res'}
2144:{'type': 'NameLoad', 'value': 'start'}
2144:{'type': 'NameLoad', 'value': 'end'}
2144:{'type': 'Assign', 'children': [50, 54]}
2144:{'type': 'SubscriptStore', 'children': [51, 52]}
2144:{'type': 'ListLoad', 'children': [55, 62]}
2144:{'type': 'SubscriptLoad', 'children': [56, 60]}
2144:{'type': 'NameLoad', 'value': 'res'}
2144:{'type': 'Index', 'children': [61]}
2144:{'type': 'Num', 'value': '0'}
2144:{'type': 'Call', 'children': [63, 64, 65]}
2144:{'type': 'NameLoad', 'value': 'max'}
2144:{'type': 'Num', 'value': '-1'}
2144:{'type': 'Index', 'children': [71]}
2144:{'type': 'SubscriptLoad', 'children': [74, 75]}
2144:{'type': 'Slice', 'children': [76]}
2144:{'type': 'decorator_list'}
2145:{'type': 'NameLoad', 'value': 'None'}
2145:{'type': 'For', 'children': [24, 25, 26]}
2145:{'type': 'If', 'children': [28, 31]}
2145:{'type': 'CompareIs', 'children': [29, 30]}
2145:{'type': 'NameLoad', 'value': 'current_interval'}
2145:{'type': 'SubscriptLoad', 'children': [39, 40]}
2145:{'type': 'Num', 'value': '0'}
2145:{'type': 'body', 'children': [47]}
2145:{'type': 'Call', 'children': [53, 54, 58]}
2145:{'type': 'Num', 'value': '1'}
2145:{'type': 'Index', 'children': [61]}
2145:{'type': 'Num', 'value': '1'}
2145:{'type': 'orelse', 'children': [63, 69]}
2145:{'type': 'NameLoad', 'value': 'final_intervals'}
2145:{'type': 'Assign', 'children': [70, 71]}
2145:{'type': 'CompareIsNot', 'children': [74, 75]}
2145:{'type': 'Expr', 'children': [78]}
2145:{'type': 'NameLoad', 'value': 'final_intervals'}
2147:{'type': 'defaults'}
2147:{'type': 'ListLoad'}
2147:{'type': 'NameStore', 'value': 'active'}
2147:{'type': 'Index', 'children': [55]}
2147:{'type': 'ListLoad'}
2147:{'type': 'Expr', 'children': [88]}
76
2156:{'type': 'Index', 'children': [44]}
2156:{'type': 'NameLoad', 'value': 'r'}
2156:{'type': 'SubscriptLoad', 'children': [50, 51]}
2156:{'type': 'NameLoad', 'value': 'c'}
2157:{'type': 'ImportFrom', 'children': [4], 'value': '__future__'}
2157:{'type': 'alias', 'value': 'absolute_import'}
2157:{'type': 'ImportFrom', 'children': [6], 'value': 'math'}
2157:{'type': 'bases', 'children': [9]}
2157:{'type': 'FunctionDef', 'children': [12, 18, 41], 'value': 'uniquePaths'}
2157:{'type': 'args', 'children': [14, 15, 16]}
2157:{'type': 'NameParam', 'value': 'self'}
2157:{'type': 'NameParam', 'value': 'm'}
2157:{'type': 'defaults'}
2157:{'type': 'Return', 'children': [20]}
2157:{'type': 'NameLoad', 'value': 'int'}
2157:{'type': 'BinOpDiv', 'children': [23, 30]}
2157:{'type': 'Call', 'children': [24, 25]}
2157:{'type': 'NameLoad', 'value': 'factorial'}
2157:{'type': 'BinOpSub', 'children': [26, 29]}
2157:{'type': 'BinOpAdd', 'children': [27, 28]}
2157:{'type': 'NameLoad', 'value': 'm'}
2157:{'type': 'NameLoad', 'value': 'n'}
2157:{'type': 'Num', 'value': '2'}
2157:{'type': 'Call', 'children': [32, 33]}
2157:{'type': 'NameLoad', 'value': 'factorial'}
2157:{'type': 'NameLoad', 'value': 'm'}
2157:{'type': 'Call', 'children': [37, 38]}
2157:{'type': 'BinOpSub', 'children': [39, 40]}
2157:{'type': 'NameLoad', 'value': 'n'}
2157:{'type': 'Num', 'value': '1'}
2161:{'type': 'alias', 'value': 'Fraction'}
2161:{'type': 'NameStore', 'value': 'L'}
2161:{'type': 'Call', 'children': [35, 36]}
2161:{'type': 'BinOpSub', 'children': [43, 44]}
2161:{'type': 'NameLoad', 'value': 'Fraction'}
2161:{'type': 'NameLoad', 'value': 'ans'}
2161:{'type': 'BinOpSub', 'children': [52, 53]}
2161:{'type': 'NameLoad', 'value': 'int'}
77
78
2191:{'type': 'bases', 'children': [3]}
2191:{'type': 'Call', 'children': [14]}
2191:{'type': 'NameLoad', 'value': 'digits'}
2191:{'type': 'Assign', 'children': [18, 19]}
2191:{'type': 'NameLoad', 'value': 'len'}
2191:{'type': 'AugAssignAdd', 'children': [30, 31]}
2191:{'type': 'NameLoad', 'value': 'd'}
2191:{'type': 'Call', 'children': [52, 53]}
2191:{'type': 'decorator_list'}
2192:{'type': 'Module', 'children': [1]}
2192:{'type': 'NameLoad', 'value': 'object'}
2192:{'type': 'args', 'children': [8, 9]}
2192:{'type': 'NameParam', 'value': 'digits'}
2192:{'type': 'defaults'}
2192:{'type': 'NameStore', 'value': 'temp'}
2192:{'type': 'NameLoad', 'value': 'int'}
2192:{'type': 'Call', 'children': [18, 21]}
2192:{'type': 'Str', 'value': ''}
2192:{'type': 'attr', 'value': 'join'}
2192:{'type': 'Call', 'children': [23, 24]}
2192:{'type': 'comprehension', 'children': [26, 27]}
2192:{'type': 'NameLoad', 'value': 'digits'}
2192:{'type': 'ListComp', 'children': [31, 34]}
2192:{'type': 'NameLoad', 'value': 'unicode'}
2192:{'type': 'NameLoad', 'value': 'temp'}
2192:{'type': 'decorator_list'}
81
2197:{'type': 'defaults'}
2197:{'type': 'CompareEq', 'children': [24, 27]}
2197:{'type': 'NameLoad', 'value': 'nums'}
2197:{'type': 'Num', 'value': '0'}
2197:{'type': 'body', 'children': [37]}
2197:{'type': 'BinOpFloorDiv', 'children': [45, 48]}
2197:{'type': 'NameLoad', 'value': 'self'}
2197:{'type': 'attr', 'value': 'search'}
2197:{'type': 'NameLoad', 'value': 'mid'}
82
83
2228:{'type': 'ClassDef', 'children': [2, 4, 77], 'value': 'Solution'}
2228:{'type': 'NameLoad', 'value': 'object'}
2228:{'type': 'FunctionDef', 'children': [6, 12, 76], 'value': 'buildTree'}
2228:{'type': 'args', 'children': [8, 9, 10]}
2228:{'type': 'NameParam', 'value': 'preorder'}
2228:{'type': 'defaults'}
2228:{'type': 'body', 'children': [13, 18, 25, 69]}
2228:{'type': 'Assign', 'children': [14, 15]}
2228:{'type': 'NameStore', 'value': 'L'}
2228:{'type': 'Call', 'children': [16, 17]}
2228:{'type': 'NameLoad', 'value': 'len'}
2228:{'type': 'Assign', 'children': [19, 20]}
2228:{'type': 'Call', 'children': [21, 24]}
2228:{'type': 'NameLoad', 'value': 'collections'}
2228:{'type': 'attr', 'value': 'deque'}
2228:{'type': 'FunctionDef', 'children': [26, 31, 68], 'value': 'helper'}
2228:{'type': 'arguments', 'children': [27, 30]}
2228:{'type': 'args', 'children': [28, 29]}
2228:{'type': 'defaults'}
2228:{'type': 'body', 'children': [32, 39, 45, 52]}
2228:{'type': 'If', 'children': [33, 36]}
2228:{'type': 'NameLoad', 'value': 'l'}
2228:{'type': 'NameLoad', 'value': 'r'}
2228:{'type': 'body', 'children': [37]}
2228:{'type': 'NameLoad', 'value': 'None'}
2228:{'type': 'AttributeLoad', 'children': [43, 44]}
2228:{'type': 'NameLoad', 'value': 'preorder'}
2228:{'type': 'attr', 'value': 'popleft'}
2228:{'type': 'Assign', 'children': [46, 47]}
2228:{'type': 'attr', 'value': 'index'}
2228:{'type': 'NameLoad', 'value': 'num'}
2228:{'type': 'Return', 'children': [53]}
2228:{'type': 'Call', 'children': [54, 55, 56, 62]}
2228:{'type': 'NameLoad', 'value': 'TreeNode'}
2228:{'type': 'NameLoad', 'value': 'num'}
2228:{'type': 'Call', 'children': [57, 58, 59]}
2228:{'type': 'NameLoad', 'value': 'helper'}
2228:{'type': 'NameLoad', 'value': 'l'}
2228:{'type': 'Num', 'value': '1'}
2228:{'type': 'Call', 'children': [63, 64, 67]}
2228:{'type': 'BinOpAdd', 'children': [65, 66]}
2228:{'type': 'NameLoad', 'value': 'i_in'}
2228:{'type': 'NameLoad', 'value': 'r'}
2228:{'type': 'decorator_list'}
2228:{'type': 'Call', 'children': [71, 72, 73]}
2228:{'type': 'NameLoad', 'value': 'helper'}
2228:{'type': 'BinOpSub', 'children': [74, 75]}
2228:{'type': 'Num', 'value': '1'}
2228:{'type': 'decorator_list'}
2234:{'type': 'Module', 'children': [1]}
2234:{'type': 'bases', 'children': [3]}
2234:{'type': 'FunctionDef', 'children': [6, 12, 69], 'value': 'buildTree'}
2234:{'type': 'args', 'children': [8, 9, 10]}
2234:{'type': 'NameParam', 'value': 'inorder'}
2234:{'type': 'defaults'}
2234:{'type': 'If', 'children': [14, 15, 66]}
2234:{'type': 'Assign', 'children': [17, 18]}
2234:{'type': 'Call', 'children': [19, 22]}
2234:{'type': 'AttributeLoad', 'children': [20, 21]}
2234:{'type': 'NameLoad', 'value': 'inorder'}
2234:{'type': 'AttributeLoad', 'children': [24, 25]}
2234:{'type': 'NameLoad', 'value': 'preorder'}
2234:{'type': 'Num', 'value': '0'}
2234:{'type': 'Assign', 'children': [28, 29]}
2234:{'type': 'SubscriptLoad', 'children': [32, 33]}
2234:{'type': 'Index', 'children': [34]}
2234:{'type': 'Call', 'children': [40, 43, 44]}
2234:{'type': 'attr', 'value': 'buildTree'}
2234:{'type': 'NameLoad', 'value': 'preorder'}
2234:{'type': 'Slice', 'children': [47, 48]}
2234:{'type': 'Num', 'value': '0'}
2234:{'type': 'NameLoad', 'value': 'ind'}
2234:{'type': 'Assign', 'children': [50, 53]}
2234:{'type': 'NameLoad', 'value': 'root'}
2234:{'type': 'attr', 'value': 'right'}
2234:{'type': 'Call', 'children': [54, 57, 58]}
2234:{'type': 'NameLoad', 'value': 'self'}
2234:{'type': 'attr', 'value': 'buildTree'}
2234:{'type': 'NameLoad', 'value': 'preorder'}
2234:{'type': 'Slice', 'children': [61]}
2234:{'type': 'BinOpAdd', 'children': [62, 63]}
2234:{'type': 'NameLoad', 'value': 'ind'}
2234:{'type': 'Num', 'value': '1'}
2234:{'type': 'Return', 'children': [65]}
2234:{'type': 'orelse', 'children': [67]}
2234:{'type': 'decorator_list'}
2237:{'type': 'Module', 'children': [1]}
2237:{'type': 'Assign', 'children': [17, 18]}
2237:{'type': 'Num', 'value': '0'}
2237:{'type': 'NameLoad', 'value': 'root'}
2237:{'type': 'AttributeLoad', 'children': [41, 42]}
2237:{'type': 'Assign', 'children': [49, 52]}
2237:{'type': 'AttributeStore', 'children': [50, 51]}
2237:{'type': 'NameLoad', 'value': 'preorder'}
2237:{'type': 'Return', 'children': [64]}
2239:{'type': 'Module', 'children': [1]}
2239:{'type': 'bases', 'children': [3]}
2239:{'type': 'NameParam', 'value': 'inorder'}
2239:{'type': 'defaults'}
2239:{'type': 'If', 'children': [14, 15]}
2239:{'type': 'NameLoad', 'value': 'inorder'}
2239:{'type': 'Assign', 'children': [17, 18]}
2239:{'type': 'NameStore', 'value': 'ind'}
2239:{'type': 'NameLoad', 'value': 'inorder'}
2239:{'type': 'attr', 'value': 'index'}
2239:{'type': 'Call', 'children': [23, 26]}
2239:{'type': 'Num', 'value': '0'}
2239:{'type': 'NameStore', 'value': 'root'}
2239:{'type': 'Call', 'children': [30, 31]}
2239:{'type': 'NameLoad', 'value': 'inorder'}
2239:{'type': 'Assign', 'children': [36, 39]}
2239:{'type': 'NameLoad', 'value': 'root'}
2239:{'type': 'AttributeLoad', 'children': [41, 42]}
2239:{'type': 'NameLoad', 'value': 'self'}
2239:{'type': 'NameLoad', 'value': 'preorder'}
2239:{'type': 'NameLoad', 'value': 'inorder'}
2239:{'type': 'Slice', 'children': [47, 48]}
2239:{'type': 'Num', 'value': '0'}
2239:{'type': 'NameLoad', 'value': 'root'}
2239:{'type': 'attr', 'value': 'right'}
2239:{'type': 'Call', 'children': [54, 57, 58]}
2239:{'type': 'AttributeLoad', 'children': [55, 56]}
2239:{'type': 'attr', 'value': 'buildTree'}
2239:{'type': 'BinOpAdd', 'children': [62, 63]}
2248:{'type': 'bases', 'children': [3]}
2248:{'type': 'args', 'children': [8, 9, 10]}
2248:{'type': 'Call', 'children': [19, 20]}
2248:{'type': 'NameLoad', 'value': 'preorder'}
2248:{'type': 'attr', 'value': 'left'}
2248:{'type': 'NameLoad', 'value': 'self'}
2248:{'type': 'attr', 'value': 'index'}
2248:{'type': 'Assign', 'children': [49, 52]}
2248:{'type': 'NameLoad', 'value': 'preorder'}
2248:{'type': 'SubscriptLoad', 'children': [58, 59]}
2248:{'type': 'NameLoad', 'value': 'inorder'}
2248:{'type': 'Num', 'value': '1'}
2248:{'type': 'NameLoad', 'value': 'root'}
2248:{'type': 'decorator_list'}
2250:{'type': 'body', 'children': [5]}
2250:{'type': 'FunctionDef', 'children': [6, 12, 87], 'value': 'buildTree'}
2250:{'type': 'arguments', 'children': [15, 18]}
2250:{'type': 'args', 'children': [16, 17]}
2250:{'type': 'If', 'children': [21, 23]}
2250:{'type': 'NameStore', 'value': 'value'}
2250:{'type': 'Index', 'children': [31]}
2250:{'type': 'AttributeLoad', 'children': [41, 42]}
2250:{'type': 'NameLoad', 'value': 'value'}
2250:{'type': 'NameLoad', 'value': 'build'}
2250:{'type': 'Slice', 'children': [70]}
2250:{'type': 'SubscriptLoad', 'children': [74, 75]}
2250:{'type': 'NameLoad', 'value': 'inorder'}
2250:{'type': 'Slice', 'children': [76]}
2250:{'type': 'BinOpAdd', 'children': [77, 78]}
2250:{'type': 'Num', 'value': '1'}
2250:{'type': 'decorator_list'}
2250:{'type': 'NameLoad', 'value': 'build'}
2250:{'type': 'NameLoad', 'value': 'inorder'}
2251:{'type': 'arguments', 'children': [7, 11]}
2251:{'type': 'args', 'children': [8, 9, 10]}
2251:{'type': 'NameParam', 'value': 'self'}
2251:{'type': 'defaults'}
2251:{'type': 'If', 'children': [14, 19]}
2251:{'type': 'Call', 'children': [16, 17]}
2251:{'type': 'SubscriptLoad', 'children': [33, 34]}
2251:{'type': 'NameLoad', 'value': 'preorder'}
2251:{'type': 'NameLoad', 'value': 'preorder'}
2251:{'type': 'NameLoad', 'value': 'inorder'}
2251:{'type': 'SubscriptLoad', 'children': [51, 52]}
2251:{'type': 'NameLoad', 'value': 'preorder'}
2251:{'type': 'Num', 'value': '0'}
2251:{'type': 'AttributeStore', 'children': [56, 57]}
2251:{'type': 'NameLoad', 'value': 'root'}
2251:{'type': 'Slice', 'children': [65, 66]}
2251:{'type': 'Num', 'value': '1'}
2251:{'type': 'attr', 'value': 'right'}
2251:{'type': 'Slice', 'children': [84]}
2251:{'type': 'NameLoad', 'value': 'inorder'}
2251:{'type': 'BinOpAdd', 'children': [91, 92]}
84
2253:{'type': 'CompareLt', 'children': [14, 17]}
2253:{'type': 'NameLoad', 'value': 'len'}
2253:{'type': 'SubscriptLoad', 'children': [24, 25]}
2253:{'type': 'NameLoad', 'value': 'prices'}
2253:{'type': 'CompareGt', 'children': [36, 37]}
2253:{'type': 'NameStore', 'value': 'buy_price'}
2253:{'type': 'NameLoad', 'value': 'price'}
2253:{'type': 'orelse', 'children': [43]}
2253:{'type': 'BinOpSub', 'children': [46, 47]}
2254:{'type': 'ClassDef', 'children': [2, 4, 73], 'value': 'Solution'}
2254:{'type': 'NameLoad', 'value': 'object'}
2254:{'type': 'body', 'children': [5]}
2254:{'type': 'NameParam', 'value': 'self'}
2254:{'type': 'body', 'children': [12, 19, 25, 28, 70]}
2254:{'type': 'CompareEq', 'children': [14, 15]}
2254:{'type': 'NameLoad', 'value': 'prices'}
2254:{'type': 'ListLoad'}
2254:{'type': 'Return', 'children': [18]}
2254:{'type': 'Assign', 'children': [20, 21]}
2254:{'type': 'SubscriptLoad', 'children': [22, 23]}
2254:{'type': 'Index', 'children': [24]}
2254:{'type': 'Assign', 'children': [26, 27]}
2254:{'type': 'NameStore', 'value': 'max_profit'}
2254:{'type': 'For', 'children': [29, 30, 36]}
2254:{'type': 'NameStore', 'value': 'i'}
2254:{'type': 'NameLoad', 'value': 'xrange'}
2254:{'type': 'Num', 'value': '1'}
2254:{'type': 'body', 'children': [37, 51]}
2254:{'type': 'If', 'children': [38, 44]}
2254:{'type': 'Index', 'children': [42]}
2254:{'type': 'NameStore', 'value': 'min_price'}
2254:{'type': 'Index', 'children': [50]}
2254:{'type': 'NameLoad', 'value': 'i'}
2254:{'type': 'If', 'children': [52, 58]}
2254:{'type': 'CompareGt', 'children': [53, 57]}
2254:{'type': 'SubscriptLoad', 'children': [54, 55]}
2254:{'type': 'NameLoad', 'value': 'prices'}
2254:{'type': 'Index', 'children': [56]}
2254:{'type': 'NameLoad', 'value': 'min_price'}
2254:{'type': 'Assign', 'children': [60, 61]}
2254:{'type': 'NameStore', 'value': 'max_profit'}
2254:{'type': 'Call', 'children': [62, 63, 64]}
2254:{'type': 'NameLoad', 'value': 'max'}
2254:{'type': 'BinOpSub', 'children': [65, 69]}
2254:{'type': 'SubscriptLoad', 'children': [66, 67]}
2254:{'type': 'NameLoad', 'value': 'prices'}
2254:{'type': 'Index', 'children': [68]}
2254:{'type': 'NameLoad', 'value': 'i'}
2254:{'type': 'Return', 'children': [71]}
2254:{'type': 'NameLoad', 'value': 'max_profit'}
2254:{'type': 'decorator_list'}
2256:{'type': 'ClassDef', 'children': [2, 4, 48], 'value': 'Solution'}
2256:{'type': 'body', 'children': [5]}
2256:{'type': 'FunctionDef', 'children': [6, 11, 47], 'value': 'maxProfit'}
2256:{'type': 'arguments', 'children': [7, 10]}
2256:{'type': 'NameParam', 'value': 'self'}
2256:{'type': 'NameParam', 'value': 'prices'}
2256:{'type': 'defaults'}
2256:{'type': 'body', 'children': [12, 15, 20, 45]}
2256:{'type': 'NameStore', 'value': 'maxProfit'}
2256:{'type': 'Call', 'children': [18, 19]}
2256:{'type': 'For', 'children': [21, 22, 23]}
2256:{'type': 'body', 'children': [24]}
2256:{'type': 'NameLoad', 'value': 'price'}
2256:{'type': 'orelse', 'children': [33]}
2256:{'type': 'If', 'children': [34, 39]}
2256:{'type': 'BinOpSub', 'children': [36, 37]}
2256:{'type': 'NameLoad', 'value': 'minPrice'}
2256:{'type': 'NameLoad', 'value': 'maxProfit'}
2256:{'type': 'NameStore', 'value': 'maxProfit'}
2256:{'type': 'BinOpSub', 'children': [43, 44]}
2256:{'type': 'NameLoad', 'value': 'price'}
2256:{'type': 'Return', 'children': [46]}
2256:{'type': 'decorator_list'}
2258:{'type': 'NameLoad', 'value': 'object'}
2258:{'type': 'NameParam', 'value': 'self'}
2258:{'type': 'NameParam', 'value': 'prices'}
2258:{'type': 'defaults'}
2258:{'type': 'body', 'children': [12, 17, 20, 49]}
2258:{'type': 'NameLoad', 'value': 'p'}
2258:{'type': 'orelse', 'children': [37]}
2258:{'type': 'If', 'children': [38, 43]}
2258:{'type': 'Assign', 'children': [45, 46]}
2258:{'type': 'NameLoad', 'value': 'p'}
2263:{'type': 'NameLoad', 'value': 'prices'}
2266:{'type': 'Str', 'value': 'inf'}
2266:{'type': 'NameLoad', 'value': 'len'}
2266:{'type': 'Return', 'children': [57]}
2266:{'type': 'NameLoad', 'value': 'maxProfit'}
2267:{'type': 'NameLoad', 'value': 'object'}
2267:{'type': 'NameParam', 'value': 'prices'}
2267:{'type': 'NameLoad', 'value': 'prices'}
2267:{'type': 'CompareEq', 'children': [17, 20]}
2267:{'type': 'Num', 'value': '0'}
2267:{'type': 'Assign', 'children': [25, 26]}
2267:{'type': 'NameStore', 'value': 'cur_min'}
2267:{'type': 'NameLoad', 'value': 'prices'}
2267:{'type': 'For', 'children': [37, 38, 44]}
2267:{'type': 'NameStore', 'value': 'i'}
2267:{'type': 'NameLoad', 'value': 'cur_min'}
2267:{'type': 'SubscriptLoad', 'children': [51, 52]}
2267:{'type': 'NameLoad', 'value': 'i'}
2267:{'type': 'Call', 'children': [67, 68, 69]}
2267:{'type': 'Num', 'value': '0'}
2267:{'type': 'Num', 'value': '0'}
2269:{'type': 'Module', 'children': [1]}
2269:{'type': 'args', 'children': [8, 9]}
2269:{'type': 'NameParam', 'value': 'self'}
2269:{'type': 'body', 'children': [12, 15, 20, 41]}
2269:{'type': 'Assign', 'children': [13, 14]}
2269:{'type': 'For', 'children': [21, 22, 23]}
2269:{'type': 'If', 'children': [25, 28, 32]}
2269:{'type': 'NameLoad', 'value': 'minVal'}
2269:{'type': 'NameLoad', 'value': 'p'}
2269:{'type': 'NameStore', 'value': 'maxx'}
2269:{'type': 'NameLoad', 'value': 'max'}
2269:{'type': 'BinOpSub', 'children': [39, 40]}
2269:{'type': 'NameLoad', 'value': 'minVal'}
2269:{'type': 'NameLoad', 'value': 'maxx'}
2271:{'type': 'Module', 'children': [1]}
2271:{'type': 'NameParam', 'value': 'prices'}
2271:{'type': 'defaults'}
2271:{'type': 'body', 'children': [12, 17, 20, 38]}
2271:{'type': 'Assign', 'children': [13, 14]}
2271:{'type': 'Call', 'children': [15, 16]}
2271:{'type': 'Assign', 'children': [18, 19]}
2271:{'type': 'For', 'children': [21, 22, 23]}
2271:{'type': 'NameStore', 'value': 'price'}
2271:{'type': 'NameLoad', 'value': 'prices'}
2271:{'type': 'Assign', 'children': [25, 26]}
2271:{'type': 'NameStore', 'value': 'min_price'}
2271:{'type': 'Call', 'children': [27, 28, 29]}
2271:{'type': 'NameLoad', 'value': 'price'}
2271:{'type': 'NameStore', 'value': 'max_profit'}
2271:{'type': 'Call', 'children': [33, 34, 35]}
2271:{'type': 'NameLoad', 'value': 'min_price'}
2271:{'type': 'NameLoad', 'value': 'max_profit'}
2272:{'type': 'NameLoad', 'value': 'object'}
2272:{'type': 'NameStore', 'value': 'size'}
2272:{'type': 'NameLoad', 'value': 'prices'}
2272:{'type': 'NameLoad', 'value': 'float'}
2272:{'type': 'If', 'children': [48, 54, 61]}
2272:{'type': 'Assign', 'children': [56, 57]}
2273:{'type': 'NameLoad', 'value': 'diff'}
2275:{'type': 'NameLoad', 'value': 'prices'}
2275:{'type': 'Assign', 'children': [56, 57]}
2275:{'type': 'NameLoad', 'value': 'profit'}
2278:{'type': 'alias', 'value': 'absolute_import'}
2278:{'type': 'NameLoad', 'value': 'object'}
2278:{'type': 'arguments', 'children': [12, 15]}
2278:{'type': 'defaults'}
2278:{'type': 'NameStore', 'value': 'xdiff'}
2278:{'type': 'NameLoad', 'value': 'x'}
2278:{'type': 'NameStore', 'value': 'res'}
2278:{'type': 'Assign', 'children': [42, 43]}
2278:{'type': 'NameLoad', 'value': 'max'}
2278:{'type': 'NameStore', 'value': 'res'}
2278:{'type': 'decorator_list'}
2285:{'type': 'NameParam', 'value': 'self'}
2285:{'type': 'ListLoad', 'children': [27]}
2285:{'type': 'For', 'children': [32, 33, 42]}
2285:{'type': 'BinOpSub', 'children': [36, 39]}
2285:{'type': 'Num', 'value': '-1'}
2285:{'type': 'NameLoad', 'value': 'max_array'}
2285:{'type': 'SubscriptLoad', 'children': [52, 53]}
2285:{'type': 'NameLoad', 'value': 'xrange'}
2285:{'type': 'NameStore', 'value': 'max_profit'}
2285:{'type': 'Index', 'children': [76]}
2285:{'type': 'NameLoad', 'value': 'prices'}
2285:{'type': 'NameLoad', 'value': 'i'}
2285:{'type': 'Return', 'children': [82]}
2285:{'type': 'decorator_list'}
2286:{'type': 'args', 'children': [8, 9]}
2286:{'type': 'NameParam', 'value': 'self'}
2286:{'type': 'Num', 'value': '0'}
2286:{'type': 'NameLoad', 'value': 'xrange'}
2286:{'type': 'Assign', 'children': [28, 29]}
2286:{'type': 'SubscriptLoad', 'children': [33, 34]}
2286:{'type': 'BinOpSub', 'children': [36, 41]}
2286:{'type': 'BinOpSub', 'children': [37, 40]}
2286:{'type': 'AttributeLoad', 'children': [45, 46]}
2286:{'type': 'NameLoad', 'value': 'maxPrice'}
2286:{'type': 'Call', 'children': [52, 53]}
2286:{'type': 'Call', 'children': [54, 55]}
2286:{'type': 'body', 'children': [57]}
2286:{'type': 'Assign', 'children': [58, 59]}
2286:{'type': 'Call', 'children': [60, 61, 62]}
2286:{'type': 'Return', 'children': [72]}
2287:{'type': 'Module', 'children': [1]}
2287:{'type': 'NameLoad', 'value': 'object'}
2287:{'type': 'NameParam', 'value': 'p'}
2287:{'type': 'defaults'}
2287:{'type': 'Assign', 'children': [13, 14]}
2287:{'type': 'NameStore', 'value': 'res'}
2287:{'type': 'Assign', 'children': [16, 17]}
2287:{'type': 'ListLoad'}
2287:{'type': 'NameLoad', 'value': 'xrange'}
2287:{'type': 'NameLoad', 'value': 'len'}
2287:{'type': 'Num', 'value': '1'}
2287:{'type': 'Num', 'value': '-1'}
2287:{'type': 'Expr', 'children': [43]}
2287:{'type': 'NameLoad', 'value': 'pm'}
2287:{'type': 'attr', 'value': 'insert'}
2287:{'type': 'Num', 'value': '0'}
2287:{'type': 'Call', 'children': [52, 53]}
2287:{'type': 'Call', 'children': [54, 55]}
2287:{'type': 'NameLoad', 'value': 'p'}
2287:{'type': 'NameLoad', 'value': 'res'}
2287:{'type': 'BinOpSub', 'children': [63, 67]}
2287:{'type': 'Index', 'children': [66]}
2287:{'type': 'NameLoad', 'value': 'i'}
2287:{'type': 'SubscriptLoad', 'children': [68, 69]}
2287:{'type': 'NameLoad', 'value': 'p'}
2287:{'type': 'Index', 'children': [70]}
2287:{'type': 'Print', 'children': [74]}
2287:{'type': 'NameLoad', 'value': 'pm'}
2287:{'type': 'decorator_list'}
2288:{'type': 'body', 'children': [5]}
2288:{'type': 'arguments', 'children': [7, 10]}
2288:{'type': 'defaults'}
2288:{'type': 'NameLoad', 'value': 'len'}
2288:{'type': 'Num', 'value': '0'}
2288:{'type': 'CompareEq', 'children': [23, 27]}
2288:{'type': 'Num', 'value': '10000'}
2288:{'type': 'NameLoad', 'value': 'prices'}
2288:{'type': 'Assign', 'children': [37, 38]}
2288:{'type': 'NameStore', 'value': 'i'}
2288:{'type': 'Call', 'children': [42, 43]}
2288:{'type': 'NameLoad', 'value': 'x'}
2288:{'type': 'body', 'children': [45]}
2288:{'type': 'For', 'children': [46, 47, 52]}
2288:{'type': 'NameLoad', 'value': 'max'}
2288:{'type': 'NameLoad', 'value': 'maxx'}
2288:{'type': 'NameLoad', 'value': 'prices'}
2288:{'type': 'Index', 'children': [62]}
2288:{'type': 'BinOpSub', 'children': [64, 65]}
2288:{'type': 'SubscriptLoad', 'children': [68, 69]}
2288:{'type': 'NameLoad', 'value': 'j'}
2288:{'type': 'decorator_list'}
2292:{'type': 'arguments', 'children': [12, 15]}
2292:{'type': 'Assign', 'children': [18, 19]}
2292:{'type': 'Assign', 'children': [30, 31]}
2292:{'type': 'CompareLt', 'children': [36, 37]}
2292:{'type': 'NameLoad', 'value': 'min_price'}
2292:{'type': 'Assign', 'children': [40, 41]}
2292:{'type': 'NameLoad', 'value': 'profit'}
2292:{'type': 'decorator_list'}
2295:{'type': 'Module', 'children': [1]}
2295:{'type': 'bases', 'children': [3]}
2295:{'type': 'NameLoad', 'value': 'object'}
2295:{'type': 'body', 'children': [5]}
2295:{'type': 'FunctionDef', 'children': [6, 11, 80], 'value': 'maxProfit'}
2295:{'type': 'args', 'children': [8, 9]}
2295:{'type': 'body', 'children': [12, 15, 18, 51, 54, 78]}
2295:{'type': 'Assign', 'children': [13, 14]}
2295:{'type': 'Assign', 'children': [16, 17]}
2295:{'type': 'NameStore', 'value': 'curMax'}
2295:{'type': 'Num', 'value': '0'}
2295:{'type': 'For', 'children': [19, 20, 29]}
2295:{'type': 'NameLoad', 'value': 'xrange'}
2295:{'type': 'BinOpSub', 'children': [23, 26]}
2295:{'type': 'Call', 'children': [24, 25]}
2295:{'type': 'NameLoad', 'value': 'prices'}
2295:{'type': 'Num', 'value': '-1'}
2295:{'type': 'body', 'children': [30, 44]}
2295:{'type': 'If', 'children': [31, 37]}
2295:{'type': 'CompareGt', 'children': [32, 36]}
2295:{'type': 'NameLoad', 'value': 'prices'}
2295:{'type': 'Index', 'children': [35]}
2295:{'type': 'NameLoad', 'value': 'i'}
2295:{'type': 'NameLoad', 'value': 'curMax'}
2295:{'type': 'body', 'children': [38]}
2295:{'type': 'NameStore', 'value': 'curMax'}
2295:{'type': 'SubscriptLoad', 'children': [41, 42]}
2295:{'type': 'NameLoad', 'value': 'prices'}
2295:{'type': 'NameLoad', 'value': 'i'}
2295:{'type': 'Expr', 'children': [45]}
2295:{'type': 'Call', 'children': [46, 49, 50]}
2295:{'type': 'AttributeLoad', 'children': [47, 48]}
2295:{'type': 'attr', 'value': 'insert'}
2295:{'type': 'NameStore', 'value': 'curDiff'}
2295:{'type': 'For', 'children': [55, 58, 61]}
2295:{'type': 'TupleStore', 'children': [56, 57]}
2295:{'type': 'NameStore', 'value': 'i'}
2295:{'type': 'NameStore', 'value': 'val'}
2295:{'type': 'Call', 'children': [59, 60]}
2295:{'type': 'NameLoad', 'value': 'enumerate'}
2295:{'type': 'NameLoad', 'value': 'prices'}
2295:{'type': 'Assign', 'children': [63, 64]}
2295:{'type': 'NameStore', 'value': 'diff'}
2295:{'type': 'BinOpSub', 'children': [65, 69]}
2295:{'type': 'SubscriptLoad', 'children': [66, 67]}
2295:{'type': 'NameLoad', 'value': 'maxes'}
2295:{'type': 'Index', 'children': [68]}
2295:{'type': 'NameLoad', 'value': 'i'}
2295:{'type': 'NameLoad', 'value': 'val'}
2295:{'type': 'If', 'children': [71, 74]}
2295:{'type': 'NameLoad', 'value': 'diff'}
2295:{'type': 'NameLoad', 'value': 'curDiff'}
2295:{'type': 'body', 'children': [75]}
2295:{'type': 'NameStore', 'value': 'curDiff'}
2295:{'type': 'NameLoad', 'value': 'curDiff'}
2295:{'type': 'decorator_list'}
2298:{'type': 'Module', 'children': [1, 3]}
2298:{'type': 'ImportFrom', 'children': [2], 'value': '__future__'}
2298:{'type': 'ClassDef', 'children': [4, 6, 47], 'value': 'Solution'}
2298:{'type': 'NameLoad', 'value': 'object'}
2298:{'type': 'body', 'children': [7]}
2298:{'type': 'FunctionDef', 'children': [8, 13, 46], 'value': 'maxProfit'}
2298:{'type': 'args', 'children': [10, 11]}
2298:{'type': 'NameParam', 'value': 'self'}
2298:{'type': 'defaults'}
2298:{'type': 'Import', 'children': [15]}
2298:{'type': 'identifier', 'value': 'np'}
2298:{'type': 'Assign', 'children': [18, 21]}
2298:{'type': 'AttributeLoad', 'children': [23, 24]}
2298:{'type': 'attr', 'value': 'inf'}
2298:{'type': 'Num', 'value': '0'}
2298:{'type': 'For', 'children': [27, 28, 29]}
2298:{'type': 'NameLoad', 'value': 'prices'}
2298:{'type': 'Assign', 'children': [31, 32]}
2298:{'type': 'NameStore', 'value': 'minprice'}
2298:{'type': 'NameLoad', 'value': 'min'}
2298:{'type': 'NameLoad', 'value': 'max'}
2298:{'type': 'NameLoad', 'value': 'maxprice'}
2298:{'type': 'NameLoad', 'value': 'minprice'}
2298:{'type': 'Return', 'children': [45]}
2298:{'type': 'decorator_list'}
2299:{'type': 'body', 'children': [16]}
2299:{'type': 'Return', 'children': [17]}
2299:{'type': 'ListLoad'}
2299:{'type': 'NameLoad', 'value': 'xrange'}
2299:{'type': 'NameLoad', 'value': 'i'}
2299:{'type': 'NameLoad', 'value': 'min_profit'}
2299:{'type': 'Index', 'children': [48]}
2299:{'type': 'Call', 'children': [55, 56]}
2299:{'type': 'If', 'children': [61, 64]}
2299:{'type': 'Expr', 'children': [66]}
2299:{'type': 'Call', 'children': [67, 70]}
2299:{'type': 'NameLoad', 'value': 'max_profit'}
2299:{'type': 'body', 'children': [78]}
2299:{'type': 'Return', 'children': [79]}
2299:{'type': 'orelse', 'children': [83]}
2299:{'type': 'Return', 'children': [84]}
2300:{'type': 'defaults'}
2300:{'type': 'NameStore', 'value': 'res'}
2300:{'type': 'NameLoad', 'value': 'i'}
2300:{'type': 'NameStore', 'value': 'min_profit'}
2300:{'type': 'If', 'children': [61, 64]}
2300:{'type': 'attr', 'value': 'append'}
2300:{'type': 'NameLoad', 'value': 'res'}
2300:{'type': 'orelse', 'children': [81]}
2302:{'type': 'Num', 'value': '0'}
2303:{'type': 'args', 'children': [13, 14]}
2305:{'type': 'bases', 'children': [7]}
2305:{'type': 'FunctionDef', 'children': [10, 15, 91], 'value': 'maxProfit'}
2305:{'type': 'Assign', 'children': [17, 18]}
2305:{'type': 'Call', 'children': [19, 20]}
2305:{'type': 'AttributeLoad', 'children': [24, 27]}
2305:{'type': 'Call', 'children': [25, 26]}
2305:{'type': 'NameStore', 'value': 'max_prof'}
2305:{'type': 'Call', 'children': [34, 35]}
2305:{'type': 'NameLoad', 'value': 'prices'}
2305:{'type': 'Call', 'children': [39, 40]}
2305:{'type': 'body', 'children': [44, 50, 56, 70, 81]}
2305:{'type': 'NameStore', 'value': 'buy'}
2305:{'type': 'NameLoad', 'value': 'prices'}
2305:{'type': 'AugAssignSub', 'children': [51, 55]}
2305:{'type': 'SubscriptStore', 'children': [52, 53]}
2305:{'type': 'NameLoad', 'value': 'p_dic'}
2305:{'type': 'CompareEq', 'children': [58, 62]}
2305:{'type': 'NameLoad', 'value': 'p_dic'}
2305:{'type': 'NameLoad', 'value': 'buy'}
2305:{'type': 'NameLoad', 'value': 'buy'}
2305:{'type': 'Assign', 'children': [71, 72]}
2305:{'type': 'SubscriptLoad', 'children': [73, 79]}
2305:{'type': 'Call', 'children': [74, 75]}
2305:{'type': 'Index', 'children': [80]}
2305:{'type': 'Assign', 'children': [82, 83]}
2305:{'type': 'NameLoad', 'value': 'max_prof'}
2305:{'type': 'decorator_list'}
2307:{'type': 'bases', 'children': [3]}
2307:{'type': 'NameLoad', 'value': 'object'}
2307:{'type': 'defaults'}
2307:{'type': 'body', 'children': [17, 20]}
2307:{'type': 'Assign', 'children': [18, 19]}
2307:{'type': 'While', 'children': [21, 28, 70]}
2307:{'type': 'body', 'children': [29, 35, 38, 65]}
2307:{'type': 'Assign', 'children': [30, 31]}
2307:{'type': 'SubscriptLoad', 'children': [32, 33]}
2307:{'type': 'NameStore', 'value': 'best_sell_price'}
2307:{'type': 'For', 'children': [39, 40, 46]}
2307:{'type': 'Slice', 'children': [43]}
2307:{'type': 'NameStore', 'value': 'i'}
2307:{'type': 'Num', 'value': '1'}
2307:{'type': 'Break'}
2307:{'type': 'CompareGt', 'children': [59, 60]}
2307:{'type': 'NameLoad', 'value': 'future_price'}
2307:{'type': 'body', 'children': [62]}
2307:{'type': 'Assign', 'children': [63, 64]}
2307:{'type': 'NameStore', 'value': 'best_sell_price'}
2307:{'type': 'NameLoad', 'value': 'best_sell_price'}
2307:{'type': 'NameLoad', 'value': 'price_today'}
2307:{'type': 'NameLoad', 'value': 'max'}
2307:{'type': 'Call', 'children': [79]}
2307:{'type': 'decorator_list'}
2313:{'type': 'Module', 'children': [1]}
2313:{'type': 'NameParam', 'value': 'prices'}
2313:{'type': 'body', 'children': [12, 15, 53]}
2313:{'type': 'NameStore', 'value': 'max_profit'}
2313:{'type': 'For', 'children': [16, 19, 29]}
2313:{'type': 'TupleStore', 'children': [17, 18]}
2313:{'type': 'NameStore', 'value': 'buy'}
2313:{'type': 'Call', 'children': [20, 21]}
2313:{'type': 'NameLoad', 'value': 'enumerate'}
2313:{'type': 'SubscriptLoad', 'children': [22, 23]}
2313:{'type': 'Slice', 'children': [24]}
2313:{'type': 'Assign', 'children': [31, 32]}
2313:{'type': 'NameStore', 'value': 'sell'}
2313:{'type': 'NameLoad', 'value': 'sorted'}
2313:{'type': 'SubscriptLoad', 'children': [36, 37]}
2313:{'type': 'NameLoad', 'value': 'prices'}
2313:{'type': 'Slice', 'children': [38]}
2313:{'type': 'BinOpAdd', 'children': [39, 40]}
2313:{'type': 'NameLoad', 'value': 'i'}
2313:{'type': 'Num', 'value': '1'}
2313:{'type': 'Index', 'children': [44]}
2313:{'type': 'Assign', 'children': [46, 47]}
2313:{'type': 'NameStore', 'value': 'max_profit'}
2313:{'type': 'NameLoad', 'value': 'max'}
2313:{'type': 'NameLoad', 'value': 'sell'}
2313:{'type': 'NameLoad', 'value': 'buy'}
2313:{'type': 'NameLoad', 'value': 'max_profit'}
2314:{'type': 'Module', 'children': [1]}
2314:{'type': 'ClassDef', 'children': [2, 4, 48], 'value': 'Solution'}
2314:{'type': 'NameLoad', 'value': 'object'}
2314:{'type': 'arguments', 'children': [7, 10]}
2314:{'type': 'args', 'children': [8, 9]}
2314:{'type': 'Assign', 'children': [13, 14]}
2314:{'type': 'Num', 'value': '0'}
2314:{'type': 'NameLoad', 'value': 'prices'}
2314:{'type': 'For', 'children': [21, 22, 27]}
2314:{'type': 'NameLoad', 'value': 'xrange'}
2314:{'type': 'NameLoad', 'value': 'm'}
2314:{'type': 'Num', 'value': '1'}
2314:{'type': 'body', 'children': [28, 35]}
2314:{'type': 'AttributeLoad', 'children': [32, 33]}
2314:{'type': 'attr', 'value': 'pop'}
2314:{'type': 'Num', 'value': '0'}
2314:{'type': 'NameStore', 'value': 'res'}
2314:{'type': 'NameLoad', 'value': 'max'}
2314:{'type': 'BinOpSub', 'children': [41, 44]}
2314:{'type': 'Return', 'children': [46]}
2314:{'type': 'NameLoad', 'value': 'res'}
2314:{'type': 'decorator_list'}
2317:{'type': 'Module', 'children': [1]}
2317:{'type': 'body', 'children': [5]}
2317:{'type': 'FunctionDef', 'children': [6, 11, 47], 'value': 'maxProfit'}
2317:{'type': 'arguments', 'children': [7, 10]}
2317:{'type': 'args', 'children': [8, 9]}
2317:{'type': 'NameParam', 'value': 'prices'}
2317:{'type': 'Assign', 'children': [13, 14]}
2317:{'type': 'Num', 'value': '0'}
2317:{'type': 'NameLoad', 'value': 'xrange'}
2317:{'type': 'NameLoad', 'value': 'm'}
2317:{'type': 'Num', 'value': '1'}
2317:{'type': 'body', 'children': [28, 35]}
2317:{'type': 'Assign', 'children': [29, 30]}
2317:{'type': 'Call', 'children': [31, 34]}
2317:{'type': 'AttributeLoad', 'children': [32, 33]}
2317:{'type': 'NameLoad', 'value': 'prices'}
2317:{'type': 'attr', 'value': 'pop'}
2317:{'type': 'Num', 'value': '0'}
2317:{'type': 'Call', 'children': [38, 39, 40]}
2317:{'type': 'BinOpSub', 'children': [41, 44]}
2317:{'type': 'NameLoad', 'value': 'curr'}
2317:{'type': 'decorator_list'}
2318:{'type': 'Module', 'children': [1]}
2318:{'type': 'ClassDef', 'children': [2, 4, 47], 'value': 'Solution'}
2318:{'type': 'bases', 'children': [3]}
2318:{'type': 'body', 'children': [5]}
2318:{'type': 'FunctionDef', 'children': [6, 11, 46], 'value': 'maxProfit'}
2318:{'type': 'body', 'children': [12, 15, 44]}
2318:{'type': 'Assign', 'children': [13, 14]}
2318:{'type': 'NameStore', 'value': 'global_max'}
2318:{'type': 'While', 'children': [16, 21]}
2318:{'type': 'NameLoad', 'value': 'len'}
2318:{'type': 'NameLoad', 'value': 'prices'}
2318:{'type': 'Num', 'value': '1'}
2318:{'type': 'Call', 'children': [25, 28]}
2318:{'type': 'NameLoad', 'value': 'prices'}
2318:{'type': 'attr', 'value': 'pop'}
2318:{'type': 'Num', 'value': '0'}
2318:{'type': 'Assign', 'children': [30, 31]}
2318:{'type': 'NameStore', 'value': 'max_'}
2318:{'type': 'BinOpSub', 'children': [32, 35]}
2318:{'type': 'Call', 'children': [33, 34]}
2318:{'type': 'NameLoad', 'value': 'prices'}
2318:{'type': 'CompareGt', 'children': [38, 39]}
2318:{'type': 'NameLoad', 'value': 'max_'}
2318:{'type': 'NameLoad', 'value': 'global_max'}
2318:{'type': 'body', 'children': [41]}
2318:{'type': 'NameStore', 'value': 'global_max'}
2318:{'type': 'NameLoad', 'value': 'max_'}
2318:{'type': 'Return', 'children': [45]}
2318:{'type': 'NameLoad', 'value': 'global_max'}
2320:{'type': 'Import', 'children': [4]}
2320:{'type': 'ListLoad'}
2320:{'type': 'For', 'children': [23, 24, 29]}
2320:{'type': 'Call', 'children': [25, 26]}
2320:{'type': 'NameLoad', 'value': 'xrange'}
2320:{'type': 'NameLoad', 'value': 'len'}
2320:{'type': 'NameLoad', 'value': 'heapq'}
2320:{'type': 'SubscriptLoad', 'children': [37, 38]}
2320:{'type': 'NameLoad', 'value': 'prices'}
2320:{'type': 'Index', 'children': [39]}
2320:{'type': 'NameLoad', 'value': 'i'}
2320:{'type': 'NameLoad', 'value': 'k'}
2320:{'type': 'Assign', 'children': [60, 61]}
2320:{'type': 'BinOpSub', 'children': [62, 66]}
2320:{'type': 'SubscriptLoad', 'children': [63, 64]}
2320:{'type': 'NameLoad', 'value': 'k'}
2320:{'type': 'Num', 'value': '0'}
2320:{'type': 'Assign', 'children': [71, 72]}
2320:{'type': 'NameLoad', 'value': 'ans'}
2320:{'type': 'NameLoad', 'value': 'ans'}
2322:{'type': 'ClassDef', 'children': [2, 4, 87], 'value': 'Solution'}
2322:{'type': 'FunctionDef', 'children': [6, 11, 86], 'value': 'maxProfit'}
2322:{'type': 'arguments', 'children': [7, 10]}
2322:{'type': 'args', 'children': [8, 9]}
2322:{'type': 'body', 'children': [12, 64, 81]}
2322:{'type': 'args', 'children': [15, 16, 17]}
2322:{'type': 'NameParam', 'value': 'prices'}
2322:{'type': 'NameParam', 'value': 'purchase_price'}
2322:{'type': 'NameParam', 'value': 'max_profit'}
2322:{'type': 'defaults', 'children': [19]}
2322:{'type': 'NameStore', 'value': 'max_sale_price'}
2322:{'type': 'Call', 'children': [24, 25]}
2322:{'type': 'NameLoad', 'value': 'prices'}
2322:{'type': 'Call', 'children': [34, 35, 36]}
2322:{'type': 'NameLoad', 'value': 'max'}
2322:{'type': 'NameLoad', 'value': 'max_profit'}
2322:{'type': 'Assign', 'children': [38, 39]}
2322:{'type': 'Call', 'children': [42, 45]}
2322:{'type': 'CompareEq', 'children': [49, 52]}
2322:{'type': 'Call', 'children': [50, 51]}
2322:{'type': 'NameLoad', 'value': 'prices'}
2322:{'type': 'Num', 'value': '0'}
2322:{'type': 'Return', 'children': [55]}
2322:{'type': 'NameLoad', 'value': 'calc_max_profit'}
2322:{'type': 'NameLoad', 'value': 'max_profit'}
2322:{'type': 'decorator_list'}
2322:{'type': 'CompareLtE', 'children': [66, 69]}
2322:{'type': 'NameLoad', 'value': 'len'}
2322:{'type': 'NameLoad', 'value': 'prices'}
2322:{'type': 'body', 'children': [71]}
2322:{'type': 'Num', 'value': '0'}
2322:{'type': 'orelse', 'children': [74]}
2322:{'type': 'Assign', 'children': [75, 76]}
2322:{'type': 'NameStore', 'value': 'purchase_price'}
2322:{'type': 'NameLoad', 'value': 'prices'}
2322:{'type': 'attr', 'value': 'pop'}
2322:{'type': 'Num', 'value': '0'}
2322:{'type': 'Return', 'children': [82]}
2322:{'type': 'Call', 'children': [83, 84, 85]}
2322:{'type': 'NameLoad', 'value': 'purchase_price'}
2322:{'type': 'decorator_list'}
2324:{'type': 'NameLoad', 'value': 'prices'}
2324:{'type': 'Index', 'children': [84]}
2324:{'type': 'BinOpSub', 'children': [95, 96]}
2327:{'type': 'ClassDef', 'children': [2, 4, 102], 'value': 'Solution'}
2327:{'type': 'arguments', 'children': [7, 10]}
2327:{'type': 'UnaryOpNot', 'children': [14]}
2327:{'type': 'Assign', 'children': [25, 26]}
2327:{'type': 'Num', 'value': '0'}
2327:{'type': 'NameStore', 'value': 'i'}
2327:{'type': 'Call', 'children': [32, 33]}
2327:{'type': 'NameLoad', 'value': 'len'}
2327:{'type': 'Num', 'value': '0'}
2327:{'type': 'SubscriptLoad', 'children': [41, 42]}
2327:{'type': 'Index', 'children': [43]}
2327:{'type': 'body', 'children': [46]}
2327:{'type': 'NameLoad', 'value': 'i'}
2327:{'type': 'SubscriptLoad', 'children': [55, 56]}
2327:{'type': 'body', 'children': [60]}
2327:{'type': 'AttributeLoad', 'children': [70, 71]}
2327:{'type': 'NameLoad', 'value': 'prices'}
2327:{'type': 'NameLoad', 'value': 'minVal'}
2327:{'type': 'Assign', 'children': [80, 81]}
2327:{'type': 'NameLoad', 'value': 'prices'}
2327:{'type': 'NameStore', 'value': 'tmp'}
2327:{'type': 'NameLoad', 'value': 'maxVal'}
2327:{'type': 'NameStore', 'value': 'ans'}
2327:{'type': 'NameLoad', 'value': 'max'}
2327:{'type': 'NameLoad', 'value': 'ans'}
2333:{'type': 'NameLoad', 'value': 'object'}
2333:{'type': 'FunctionDef', 'children': [6, 11, 74], 'value': 'maxProfit'}
2333:{'type': 'Assign', 'children': [13, 14]}
2333:{'type': 'Call', 'children': [15, 16]}
2333:{'type': 'NameLoad', 'value': 'prices'}
2333:{'type': 'comprehension', 'children': [24, 25]}
2333:{'type': 'Call', 'children': [29, 30]}
2333:{'type': 'NameLoad', 'value': 'len'}
2333:{'type': 'NameLoad', 'value': 'prices'}
2333:{'type': 'For', 'children': [35, 36, 37]}
2333:{'type': 'NameStore', 'value': 'i'}
2333:{'type': 'NameLoad', 'value': 'hash_table'}
2333:{'type': 'SubscriptLoad', 'children': [42, 43]}
2333:{'type': 'NameLoad', 'value': 'hash_table'}
2333:{'type': 'NameLoad', 'value': 'i'}
2333:{'type': 'body', 'children': [51, 69]}
2333:{'type': 'CompareGt', 'children': [53, 59]}
2333:{'type': 'NameLoad', 'value': 'i'}
2333:{'type': 'SubscriptLoad', 'children': [56, 57]}
2333:{'type': 'NameLoad', 'value': 'prices'}
2333:{'type': 'body', 'children': [61]}
2333:{'type': 'SubscriptLoad', 'children': [66, 67]}
2333:{'type': 'Index', 'children': [68]}
2333:{'type': 'NameLoad', 'value': 'j'}
2333:{'type': 'NameStore', 'value': 'j'}
2333:{'type': 'Num', 'value': '1'}
2333:{'type': 'Return', 'children': [73]}
2333:{'type': 'NameLoad', 'value': 'max_p'}
2336:{'type': 'bases', 'children': [3]}
2336:{'type': 'arguments', 'children': [7, 10]}
2336:{'type': 'defaults'}
2336:{'type': 'If', 'children': [13, 18]}
2336:{'type': 'NameLoad', 'value': 'len'}
2336:{'type': 'Num', 'value': '2'}
2336:{'type': 'NameStore', 'value': 'highestProfit'}
2336:{'type': 'NameStore', 'value': 'previousPrices'}
2336:{'type': 'Dict', 'children': [27, 31]}
2336:{'type': 'For', 'children': [33, 34, 41]}
2336:{'type': 'NameLoad', 'value': 'xrange'}
2336:{'type': 'Call', 'children': [38, 39]}
2336:{'type': 'NameLoad', 'value': 'len'}
2336:{'type': 'NameLoad', 'value': 'prices'}
2336:{'type': 'BinOpSub', 'children': [45, 51]}
2336:{'type': 'NameLoad', 'value': 'prices'}
2336:{'type': 'Num', 'value': '1'}
2336:{'type': 'NameLoad', 'value': 'min'}
2336:{'type': 'Assign', 'children': [57, 58]}
2336:{'type': 'SubscriptLoad', 'children': [60, 61]}
2336:{'type': 'NameLoad', 'value': 'prices'}
2336:{'type': 'BinOpAdd', 'children': [63, 64]}
2336:{'type': 'NameLoad', 'value': 'i'}
2336:{'type': 'Num', 'value': '1'}
2336:{'type': 'Call', 'children': [66, 67]}
2336:{'type': 'NameLoad', 'value': 'previousPrices'}
2336:{'type': 'Call', 'children': [70, 73]}
2336:{'type': 'attr', 'value': 'update'}
2336:{'type': 'BinOpAdd', 'children': [78, 79]}
2336:{'type': 'NameLoad', 'value': 'i'}
2336:{'type': 'BinOpAdd', 'children': [81, 82]}
2336:{'type': 'If', 'children': [84, 87, 90]}
2336:{'type': 'body', 'children': [88]}
2337:{'type': 'NameLoad', 'value': 'buy'}
2338:{'type': 'body', 'children': [5]}
2338:{'type': 'NameStore', 'value': 'idx'}
2338:{'type': 'Slice', 'children': [24]}
2338:{'type': 'NameLoad', 'value': 'max'}
2338:{'type': 'NameLoad', 'value': 'max_left'}
2338:{'type': 'orelse', 'children': [43]}
2338:{'type': 'NameLoad', 'value': 'buy'}
2338:{'type': 'body', 'children': [50]}
2339:{'type': 'FunctionDef', 'children': [6, 11, 79], 'value': 'maxProfit'}
2339:{'type': 'Num', 'value': '0'}
2339:{'type': 'NameLoad', 'value': 'len'}
2339:{'type': 'NameStore', 'value': 'm'}
2339:{'type': 'NameLoad', 'value': 'ret'}
2339:{'type': 'decorator_list'}
2340:{'type': 'Module', 'children': [1]}
2340:{'type': 'NameLoad', 'value': 'object'}
2340:{'type': 'body', 'children': [5]}
2340:{'type': 'FunctionDef', 'children': [6, 11, 94], 'value': 'maxProfit'}
2340:{'type': 'body', 'children': [18, 23, 30, 45, 53, 58, 69, 74, 82, 87]}
2340:{'type': 'NameStore', 'value': 'minPrice'}
2340:{'type': 'NameLoad', 'value': 'prices'}
2340:{'type': 'Assign', 'children': [24, 25]}
2340:{'type': 'AttributeLoad', 'children': [27, 28]}
2340:{'type': 'attr', 'value': 'index'}
2340:{'type': 'CompareEq', 'children': [32, 33]}
2340:{'type': 'NameLoad', 'value': 'minIndex'}
2340:{'type': 'Call', 'children': [35, 36]}
2340:{'type': 'NameLoad', 'value': 'prices'}
2340:{'type': 'NameLoad', 'value': 'prices'}
2340:{'type': 'Slice', 'children': [50]}
2340:{'type': 'NameLoad', 'value': 'max'}
2340:{'type': 'BinOpAdd', 'children': [62, 67]}
2340:{'type': 'attr', 'value': 'index'}
2340:{'type': 'NameLoad', 'value': 'minIndex'}
2340:{'type': 'BinOpSub', 'children': [72, 73]}
2340:{'type': 'If', 'children': [75, 78]}
2340:{'type': 'CompareGt', 'children': [76, 77]}
2340:{'type': 'Assign', 'children': [80, 81]}
2340:{'type': 'Delete', 'children': [83]}
2340:{'type': 'Index', 'children': [86]}
2340:{'type': 'SubscriptDel', 'children': [89, 90]}
2340:{'type': 'NameLoad', 'value': 'prices'}
2340:{'type': 'Index', 'children': [91]}
2340:{'type': 'NameLoad', 'value': 'minIndex'}
2340:{'type': 'NameLoad', 'value': 'maxProfit'}
2340:{'type': 'decorator_list'}
2341:{'type': 'NameLoad', 'value': 'object'}
2341:{'type': 'body', 'children': [5]}
2341:{'type': 'FunctionDef', 'children': [6, 11, 46], 'value': 'maxProfit'}
2341:{'type': 'arguments', 'children': [7, 10]}
2341:{'type': 'NameParam', 'value': 'prices'}
2341:{'type': 'body', 'children': [12, 16, 44]}
2341:{'type': 'Call', 'children': [19, 20, 21]}
2341:{'type': 'Num', 'value': '1'}
2341:{'type': 'NameStore', 'value': 'maxtrade_here'}
2341:{'type': 'BinOpSub', 'children': [28, 32]}
2341:{'type': 'Index', 'children': [31]}
2341:{'type': 'NameLoad', 'value': 'i'}
2341:{'type': 'Call', 'children': [33, 34]}
2341:{'type': 'NameLoad', 'value': 'min'}
2341:{'type': 'NameLoad', 'value': 'prices'}
2341:{'type': 'NameLoad', 'value': 'i'}
2341:{'type': 'Assign', 'children': [39, 40]}
2341:{'type': 'Call', 'children': [41, 42, 43]}
2341:{'type': 'NameLoad', 'value': 'result'}
2341:{'type': 'NameLoad', 'value': 'maxtrade_here'}
2341:{'type': 'Return', 'children': [45]}
2341:{'type': 'NameLoad', 'value': 'result'}
2342:{'type': 'Call', 'children': [21, 22]}
2342:{'type': 'BinOpSub', 'children': [31, 39]}
2342:{'type': 'SubscriptLoad', 'children': [34, 35]}
2343:{'type': 'args', 'children': [8, 9]}
2343:{'type': 'body', 'children': [12, 16, 37]}
2343:{'type': 'Num', 'value': '0'}
2343:{'type': 'For', 'children': [17, 20, 23]}
2343:{'type': 'TupleStore', 'children': [18, 19]}
2343:{'type': 'NameLoad', 'value': 'enumerate'}
2343:{'type': 'AttributeLoad', 'children': [27, 28]}
2343:{'type': 'NameLoad', 'value': 'poss'}
2343:{'type': 'attr', 'value': 'append'}
2343:{'type': 'BinOpSub', 'children': [30, 36]}
2343:{'type': 'Slice', 'children': [35]}
2343:{'type': 'NameLoad', 'value': 'i'}
2343:{'type': 'NameLoad', 'value': 'v'}
2345:{'type': 'NameParam', 'value': 'prices'}
2345:{'type': 'BinOpAdd', 'children': [47, 48]}
2346:{'type': 'arguments', 'children': [7, 10]}
2346:{'type': 'Num', 'value': '0'}
2346:{'type': 'For', 'children': [16, 17, 22]}
2346:{'type': 'NameStore', 'value': 'i'}
2346:{'type': 'Call', 'children': [18, 19]}
2346:{'type': 'NameLoad', 'value': 'xrange'}
2346:{'type': 'NameLoad', 'value': 'len'}
2346:{'type': 'NameLoad', 'value': 'prices'}
2346:{'type': 'SubscriptLoad', 'children': [33, 34]}
2346:{'type': 'Index', 'children': [35]}
2346:{'type': 'CompareGt', 'children': [38, 39]}
2346:{'type': 'NameLoad', 'value': 'todaymaxprofit'}
2346:{'type': 'NameLoad', 'value': 'maxprofit'}
2346:{'type': 'body', 'children': [41]}
2346:{'type': 'Assign', 'children': [42, 43]}
2346:{'type': 'NameLoad', 'value': 'maxprofit'}
2346:{'type': 'decorator_list'}
2347:{'type': 'Num', 'value': '1'}
2347:{'type': 'BinOpAdd', 'children': [33, 34]}
2348:{'type': 'NameLoad', 'value': 'object'}
2348:{'type': 'Num', 'value': '0'}
2348:{'type': 'NameStore', 'value': 'profits'}
2348:{'type': 'BinOpSub', 'children': [23, 29]}
2348:{'type': 'NameLoad', 'value': 'max'}
2348:{'type': 'SubscriptLoad', 'children': [26, 27]}
2348:{'type': 'NameLoad', 'value': 'prices'}
2348:{'type': 'NameLoad', 'value': 'len'}
2348:{'type': 'NameLoad', 'value': 'max'}
2348:{'type': 'NameLoad', 'value': 'profits'}
2348:{'type': 'decorator_list'}
2350:{'type': 'FunctionDef', 'children': [6, 11, 50], 'value': 'maxProfit'}
2350:{'type': 'args', 'children': [8, 9]}
2350:{'type': 'NameParam', 'value': 'prices'}
2350:{'type': 'defaults'}
2350:{'type': 'NameStore', 'value': 'maxP'}
2350:{'type': 'Num', 'value': '0'}
2350:{'type': 'NameStore', 'value': 'i'}
2350:{'type': 'NameLoad', 'value': 'xrange'}
2350:{'type': 'NameLoad', 'value': 'len'}
2350:{'type': 'NameLoad', 'value': 'prices'}
2350:{'type': 'BinOpSub', 'children': [28, 36]}
2350:{'type': 'Call', 'children': [29, 30]}
2350:{'type': 'SubscriptLoad', 'children': [31, 32]}
2350:{'type': 'BinOpAdd', 'children': [34, 35]}
2350:{'type': 'NameLoad', 'value': 'i'}
2350:{'type': 'Num', 'value': '1'}
2350:{'type': 'SubscriptLoad', 'children': [37, 38]}
2350:{'type': 'NameLoad', 'value': 'prices'}
2350:{'type': 'CompareGt', 'children': [42, 43]}
2350:{'type': 'NameLoad', 'value': 'maxP'}
2350:{'type': 'NameStore', 'value': 'maxP'}
2350:{'type': 'NameLoad', 'value': 'maxP'}
2351:{'type': 'NameLoad', 'value': 'object'}
2351:{'type': 'args', 'children': [8, 9]}
2351:{'type': 'body', 'children': [18, 23, 30, 45, 53, 58, 69, 74, 82, 87]}
2351:{'type': 'NameStore', 'value': 'minPrice'}
2351:{'type': 'BinOpAdd', 'children': [51, 52]}
2351:{'type': 'attr', 'value': 'index'}
2351:{'type': 'NameLoad', 'value': 'minIndex'}
2351:{'type': 'NameStore', 'value': 'profit'}
2351:{'type': 'CompareGt', 'children': [76, 77]}
2351:{'type': 'NameLoad', 'value': 'profit'}
2351:{'type': 'NameLoad', 'value': 'prices'}
2352:{'type': 'Module', 'children': [1]}
2352:{'type': 'bases', 'children': [3]}
2352:{'type': 'NameLoad', 'value': 'object'}
2352:{'type': 'FunctionDef', 'children': [6, 11, 74], 'value': 'maxProfit'}
2352:{'type': 'args', 'children': [8, 9]}
2352:{'type': 'NameStore', 'value': 'hash_table'}
2352:{'type': 'Call', 'children': [15, 16]}
2352:{'type': 'NameLoad', 'value': 'dict'}
2352:{'type': 'GeneratorExp', 'children': [17, 23]}
2352:{'type': 'Index', 'children': [21]}
2352:{'type': 'NameLoad', 'value': 'i'}
2352:{'type': 'NameLoad', 'value': 'prices'}
2352:{'type': 'Num', 'value': '0'}
2352:{'type': 'For', 'children': [35, 36, 37]}
2352:{'type': 'NameStore', 'value': 'i'}
2352:{'type': 'body', 'children': [38, 46]}
2352:{'type': 'Assign', 'children': [39, 40]}
2352:{'type': 'BinOpSub', 'children': [41, 45]}
2352:{'type': 'While', 'children': [47, 50]}
2352:{'type': 'NameLoad', 'value': 'j'}
2352:{'type': 'Num', 'value': '0'}
2352:{'type': 'BinOpSub', 'children': [54, 55]}
2352:{'type': 'NameLoad', 'value': 'i'}
2352:{'type': 'NameLoad', 'value': 'prices'}
2352:{'type': 'NameStore', 'value': 'max_p'}
2352:{'type': 'NameLoad', 'value': 'i'}
2352:{'type': 'SubscriptLoad', 'children': [66, 67]}
2352:{'type': 'Index', 'children': [68]}
2352:{'type': 'NameLoad', 'value': 'j'}
2352:{'type': 'AugAssignSub', 'children': [70, 71]}
2352:{'type': 'NameStore', 'value': 'j'}
2352:{'type': 'Num', 'value': '1'}
2352:{'type': 'NameLoad', 'value': 'max_p'}
2352:{'type': 'decorator_list'}
2353:{'type': 'ClassDef', 'children': [2, 4, 50], 'value': 'Solution'}
2353:{'type': 'bases', 'children': [3]}
2353:{'type': 'body', 'children': [5]}
2353:{'type': 'arguments', 'children': [7, 10]}
2353:{'type': 'args', 'children': [8, 9]}
2353:{'type': 'NameParam', 'value': 'self'}
2353:{'type': 'NameParam', 'value': 'prices'}
2353:{'type': 'defaults'}
2353:{'type': 'Assign', 'children': [13, 14]}
2353:{'type': 'NameStore', 'value': 'profit'}
2353:{'type': 'NameLoad', 'value': 'prices'}
2353:{'type': 'NameStore', 'value': 'buy'}
2353:{'type': 'Index', 'children': [27]}
2353:{'type': 'Num', 'value': '0'}
2353:{'type': 'Expr', 'children': [29]}
2353:{'type': 'Call', 'children': [30, 33]}
2353:{'type': 'AttributeLoad', 'children': [31, 32]}
2353:{'type': 'attr', 'value': 'pop'}
2353:{'type': 'Num', 'value': '0'}
2353:{'type': 'NameLoad', 'value': 'max'}
2353:{'type': 'NameLoad', 'value': 'prices'}
2353:{'type': 'NameStore', 'value': 'profit'}
2353:{'type': 'NameLoad', 'value': 'sell'}
2354:{'type': 'NameLoad', 'value': 'object'}
2354:{'type': 'FunctionDef', 'children': [6, 11, 64], 'value': 'maxProfit'}
2354:{'type': 'args', 'children': [8, 9]}
2354:{'type': 'NameParam', 'value': 'self'}
2354:{'type': 'NameParam', 'value': 'prices'}
2354:{'type': 'defaults'}
2354:{'type': 'body', 'children': [12, 17, 28, 34, 37, 60]}
2354:{'type': 'Assign', 'children': [13, 14]}
2354:{'type': 'CompareEq', 'children': [20, 21]}
2354:{'type': 'NameLoad', 'value': 'l'}
2354:{'type': 'Num', 'value': '1'}
2354:{'type': 'CompareEq', 'children': [23, 24]}
2354:{'type': 'NameLoad', 'value': 'l'}
2354:{'type': 'Assign', 'children': [29, 30]}
2354:{'type': 'NameStore', 'value': 'dp'}
2354:{'type': 'ListLoad', 'children': [32]}
2354:{'type': 'Num', 'value': '0'}
2354:{'type': 'NameStore', 'value': 'v'}
2354:{'type': 'Call', 'children': [40, 41, 42]}
2354:{'type': 'Num', 'value': '1'}
2354:{'type': 'body', 'children': [44]}
2354:{'type': 'Assign', 'children': [45, 49]}
2354:{'type': 'SubscriptStore', 'children': [46, 47]}
2354:{'type': 'NameLoad', 'value': 'dp'}
2354:{'type': 'BinOpSub', 'children': [50, 54]}
2354:{'type': 'NameLoad', 'value': 'i'}
2354:{'type': 'NameLoad', 'value': 'min'}
2354:{'type': 'SubscriptLoad', 'children': [57, 58]}
2354:{'type': 'NameLoad', 'value': 'prices'}
2354:{'type': 'Return', 'children': [61]}
2354:{'type': 'Call', 'children': [62, 63]}
2354:{'type': 'NameLoad', 'value': 'dp'}
2354:{'type': 'decorator_list'}
2355:{'type': 'Module', 'children': [1]}
2355:{'type': 'body', 'children': [5]}
2355:{'type': 'FunctionDef', 'children': [6, 11, 43], 'value': 'maxProfit'}
2355:{'type': 'arguments', 'children': [7, 10]}
2355:{'type': 'args', 'children': [8, 9]}
2355:{'type': 'body', 'children': [12, 15, 41]}
2355:{'type': 'Assign', 'children': [13, 14]}
2355:{'type': 'NameStore', 'value': 'res'}
2355:{'type': 'Num', 'value': '0'}
2355:{'type': 'Call', 'children': [18, 19, 20]}
2355:{'type': 'Num', 'value': '1'}
2355:{'type': 'Call', 'children': [21, 22]}
2355:{'type': 'NameLoad', 'value': 'prices'}
2355:{'type': 'body', 'children': [24]}
2355:{'type': 'Assign', 'children': [25, 26]}
2355:{'type': 'NameStore', 'value': 'res'}
2355:{'type': 'Call', 'children': [27, 28, 29]}
2355:{'type': 'NameLoad', 'value': 'max'}
2355:{'type': 'SubscriptLoad', 'children': [31, 32]}
2355:{'type': 'NameLoad', 'value': 'prices'}
2355:{'type': 'Index', 'children': [33]}
2355:{'type': 'NameLoad', 'value': 'i'}
2355:{'type': 'NameLoad', 'value': 'prices'}
2355:{'type': 'Num', 'value': '0'}
2355:{'type': 'NameLoad', 'value': 'i'}
2355:{'type': 'Return', 'children': [42]}
2355:{'type': 'NameLoad', 'value': 'res'}
2355:{'type': 'decorator_list'}
2356:{'type': 'NameLoad', 'value': 'object'}
2356:{'type': 'body', 'children': [5]}
2356:{'type': 'Num', 'value': '0'}
2356:{'type': 'CompareLt', 'children': [17, 20]}
2356:{'type': 'body', 'children': [22]}
2356:{'type': 'Return', 'children': [23]}
2356:{'type': 'NameLoad', 'value': 'xrange'}
2356:{'type': 'Call', 'children': [30, 31]}
2356:{'type': 'If', 'children': [34, 47]}
2356:{'type': 'CompareGt', 'children': [35, 46]}
2356:{'type': 'BinOpSub', 'children': [36, 40]}
2356:{'type': 'NameLoad', 'value': 'prices'}
2356:{'type': 'NameLoad', 'value': 'prices'}
2356:{'type': 'NameLoad', 'value': 'i'}
2356:{'type': 'NameLoad', 'value': 'maxp'}
2356:{'type': 'Assign', 'children': [49, 50]}
2356:{'type': 'SubscriptLoad', 'children': [52, 53]}
2356:{'type': 'Index', 'children': [54]}
2356:{'type': 'SubscriptLoad', 'children': [58, 59]}
2356:{'type': 'NameLoad', 'value': 'i'}
2357:{'type': 'NameStore', 'value': 'maxProf'}
85
2360:{'type': 'Module', 'children': [1]}
2360:{'type': 'defaults'}
2360:{'type': 'body', 'children': [12, 15, 50]}
2360:{'type': 'Assign', 'children': [13, 14]}
2360:{'type': 'Num', 'value': '1'}
2360:{'type': 'NameLoad', 'value': 'prices'}
2360:{'type': 'SubscriptLoad', 'children': [31, 32]}
2360:{'type': 'BinOpSub', 'children': [34, 35]}
2360:{'type': 'Num', 'value': '1'}
2360:{'type': 'body', 'children': [37]}
2360:{'type': 'NameStore', 'value': 'profit'}
2360:{'type': 'Index', 'children': [43]}
2360:{'type': 'SubscriptLoad', 'children': [45, 46]}
2360:{'type': 'BinOpSub', 'children': [48, 49]}
2361:{'type': 'ClassDef', 'children': [2, 4, 53], 'value': 'Solution'}
2361:{'type': 'Num', 'value': '1'}
2361:{'type': 'NameLoad', 'value': 'prices'}
2362:{'type': 'bases', 'children': [3]}
2362:{'type': 'body', 'children': [5]}
2362:{'type': 'args', 'children': [8, 9]}
2362:{'type': 'Num', 'value': '0'}
2362:{'type': 'CompareEq', 'children': [20, 23]}
2362:{'type': 'Assign', 'children': [28, 29]}
2362:{'type': 'Num', 'value': '0'}
2362:{'type': 'Call', 'children': [36, 37]}
2362:{'type': 'NameLoad', 'value': 'len'}
2362:{'type': 'If', 'children': [41, 54]}
2362:{'type': 'NameLoad', 'value': 'prices'}
2362:{'type': 'SubscriptLoad', 'children': [50, 51]}
2362:{'type': 'Num', 'value': '1'}
2362:{'type': 'NameLoad', 'value': 'prices'}
2362:{'type': 'Index', 'children': [67]}
2362:{'type': 'decorator_list'}
2363:{'type': 'BinOpSub', 'children': [45, 46]}
2363:{'type': 'SubscriptLoad', 'children': [52, 53]}
2363:{'type': 'AugAssignAdd', 'children': [62, 63]}
2363:{'type': 'NameStore', 'value': 'maxProfit'}
2368:{'type': 'body', 'children': [5]}
2368:{'type': 'FunctionDef', 'children': [6, 11, 57], 'value': 'maxProfit'}
2368:{'type': 'If', 'children': [30, 41]}
2368:{'type': 'CompareGt', 'children': [31, 35]}
2368:{'type': 'SubscriptLoad', 'children': [32, 33]}
2368:{'type': 'Index', 'children': [34]}
2368:{'type': 'SubscriptLoad', 'children': [36, 37]}
2368:{'type': 'Index', 'children': [38]}
2368:{'type': 'body', 'children': [42]}
2368:{'type': 'NameStore', 'value': 'max_profit'}
2368:{'type': 'NameLoad', 'value': 'prices'}
2370:{'type': 'NameLoad', 'value': 'i'}
2370:{'type': 'CompareGt', 'children': [32, 33]}
2371:{'type': 'Index', 'children': [29]}
2371:{'type': 'SubscriptLoad', 'children': [41, 42]}
86
2372:{'type': 'Module', 'children': [1]}
2372:{'type': 'NameLoad', 'value': 'object'}
2372:{'type': 'NameParam', 'value': 'self'}
2372:{'type': 'If', 'children': [13, 18]}
2372:{'type': 'CompareEq', 'children': [14, 17]}
2372:{'type': 'Num', 'value': '0'}
2372:{'type': 'Num', 'value': '0'}
2372:{'type': 'SubscriptLoad', 'children': [24, 25]}
2372:{'type': 'NameLoad', 'value': 'nums'}
2372:{'type': 'Index', 'children': [26]}
2372:{'type': 'NameStore', 'value': 'small'}
2372:{'type': 'SubscriptLoad', 'children': [36, 37]}
2372:{'type': 'Slice', 'children': [38]}
2372:{'type': 'body', 'children': [40, 55]}
2372:{'type': 'TupleStore', 'children': [42, 43, 44]}
2372:{'type': 'NameStore', 'value': 'small'}
2372:{'type': 'NameLoad', 'value': 'sorted'}
2372:{'type': 'NameLoad', 'value': 'small'}
2372:{'type': 'NameLoad', 'value': 'big'}
2372:{'type': 'NameLoad', 'value': 'value'}
2372:{'type': 'Assign', 'children': [56, 57]}
3279:{'type': 'arguments', 'children': [7, 10]}
3279:{'type': 'Return', 'children': [20]}
3279:{'type': 'NameStore', 'value': 'max_so_far'}
3279:{'type': 'Assign', 'children': [28, 29]}
3279:{'type': 'Assign', 'children': [52, 53]}
3279:{'type': 'BinOpMult', 'children': [60, 61]}
3279:{'type': 'NameLoad', 'value': 'min'}
3279:{'type': 'NameLoad', 'value': 'curr'}
3279:{'type': 'NameStore', 'value': 'max_so_far'}
3279:{'type': 'NameStore', 'value': 'result'}
3289:{'type': 'ClassDef', 'children': [2, 4, 90], 'value': 'Solution'}
3289:{'type': 'FunctionDef', 'children': [6, 11, 89], 'value': 'maxProduct'}
3289:{'type': 'args', 'children': [8, 9]}
3289:{'type': 'NameParam', 'value': 'self'}
3289:{'type': 'NameParam', 'value': 'nums'}
3289:{'type': 'NameStore', 'value': 'lgTi'}
3289:{'type': 'NameLoad', 'value': 'float'}
3289:{'type': 'CompareLt', 'children': [28, 29]}
3289:{'type': 'NameLoad', 'value': 'idx'}
3289:{'type': 'body', 'children': [33, 53, 73, 76, 84]}
3289:{'type': 'Call', 'children': [36, 37, 41, 47]}
3289:{'type': 'Index', 'children': [40]}
3289:{'type': 'SubscriptLoad', 'children': [44, 45]}
3289:{'type': 'NameLoad', 'value': 'idx'}
3289:{'type': 'NameLoad', 'value': 'smTi'}
3289:{'type': 'SubscriptLoad', 'children': [50, 51]}
3289:{'type': 'NameLoad', 'value': 'nums'}
3289:{'type': 'NameLoad', 'value': 'idx'}
3289:{'type': 'Call', 'children': [56, 57, 61, 67]}
3289:{'type': 'NameLoad', 'value': 'min'}
3289:{'type': 'NameLoad', 'value': 'smTi'}
3289:{'type': 'NameLoad', 'value': 'nums'}
3289:{'type': 'NameLoad', 'value': 'lgTiTmp'}
3289:{'type': 'body', 'children': [81]}
3289:{'type': 'Assign', 'children': [82, 83]}
3289:{'type': 'NameStore', 'value': 'best'}
3289:{'type': 'NameLoad', 'value': 'lgTi'}
3291:{'type': 'ClassDef', 'children': [2, 4, 80], 'value': 'Solution'}
3291:{'type': 'bases', 'children': [3]}
3291:{'type': 'NameLoad', 'value': 'object'}
3291:{'type': 'FunctionDef', 'children': [6, 11, 79], 'value': 'maxProduct'}
3291:{'type': 'arguments', 'children': [7, 10]}
3291:{'type': 'args', 'children': [8, 9]}
3291:{'type': 'NameParam', 'value': 'self'}
3291:{'type': 'defaults'}
3291:{'type': 'Assign', 'children': [13, 14]}
3291:{'type': 'NameStore', 'value': 'gmax'}
3291:{'type': 'NameLoad', 'value': 'None'}
3291:{'type': 'Assign', 'children': [16, 17]}
3291:{'type': 'Num', 'value': '1'}
3291:{'type': 'For', 'children': [19, 20, 21]}
3291:{'type': 'NameLoad', 'value': 'nums'}
3291:{'type': 'body', 'children': [22, 27, 39]}
3291:{'type': 'Assign', 'children': [23, 24]}
3291:{'type': 'BinOpMult', 'children': [25, 26]}
3291:{'type': 'NameLoad', 'value': 'product'}
3291:{'type': 'If', 'children': [28, 35]}
3291:{'type': 'NameLoad', 'value': 'gmax'}
3291:{'type': 'CompareGt', 'children': [33, 34]}
3291:{'type': 'NameLoad', 'value': 'product'}
3291:{'type': 'NameLoad', 'value': 'gmax'}
3291:{'type': 'body', 'children': [36]}
3291:{'type': 'NameStore', 'value': 'gmax'}
3291:{'type': 'NameLoad', 'value': 'product'}
3291:{'type': 'NameLoad', 'value': 'product'}
3291:{'type': 'Num', 'value': '0'}
3291:{'type': 'NameStore', 'value': 'product'}
3291:{'type': 'Num', 'value': '1'}
3291:{'type': 'For', 'children': [51, 52, 55]}
3291:{'type': 'NameStore', 'value': 'n'}
3291:{'type': 'Call', 'children': [53, 54]}
3291:{'type': 'NameLoad', 'value': 'reversed'}
3291:{'type': 'NameLoad', 'value': 'nums'}
3291:{'type': 'Assign', 'children': [57, 58]}
3291:{'type': 'NameStore', 'value': 'product'}
3291:{'type': 'NameLoad', 'value': 'product'}
3291:{'type': 'NameLoad', 'value': 'n'}
3291:{'type': 'If', 'children': [62, 65]}
3291:{'type': 'CompareGt', 'children': [63, 64]}
3291:{'type': 'NameLoad', 'value': 'gmax'}
3291:{'type': 'body', 'children': [66]}
3291:{'type': 'Assign', 'children': [67, 68]}
3291:{'type': 'NameStore', 'value': 'gmax'}
3291:{'type': 'If', 'children': [70, 73]}
3291:{'type': 'CompareEq', 'children': [71, 72]}
3291:{'type': 'NameLoad', 'value': 'product'}
3291:{'type': 'Assign', 'children': [75, 76]}
3291:{'type': 'NameStore', 'value': 'product'}
3291:{'type': 'NameLoad', 'value': 'gmax'}
88
2398:{'type': 'body', 'children': [12, 21, 24, 43, 63]}
2398:{'type': 'NameLoad', 'value': 'xrange'}
2398:{'type': 'For', 'children': [44, 45, 46]}
2398:{'type': 'NameStore', 'value': 'i'}
2398:{'type': 'SubscriptStore', 'children': [49, 50]}
2398:{'type': 'NameLoad', 'value': 'i'}
89
2399:{'type': 'Call', 'children': [15, 16]}
2399:{'type': 'NameLoad', 'value': 'nums'}
2399:{'type': 'BinOpMult', 'children': [20, 22]}
2399:{'type': 'ListLoad', 'children': [21]}
2399:{'type': 'Assign', 'children': [24, 28]}
2399:{'type': 'SubscriptStore', 'children': [25, 26]}
2399:{'type': 'Num', 'value': '1'}
2399:{'type': 'For', 'children': [30, 31, 35]}
2399:{'type': 'NameLoad', 'value': 'length'}
2399:{'type': 'body', 'children': [36]}
2399:{'type': 'SubscriptStore', 'children': [38, 39]}
2399:{'type': 'NameLoad', 'value': 'nums'}
2399:{'type': 'NameLoad', 'value': 'i'}
2399:{'type': 'NameLoad', 'value': 'xrange'}
2399:{'type': 'NameLoad', 'value': 'length'}
2399:{'type': 'BinOpMult', 'children': [71, 75]}
2399:{'type': 'SubscriptLoad', 'children': [79, 80]}
2399:{'type': 'NameLoad', 'value': 'nums'}
2399:{'type': 'Index', 'children': [81]}
2399:{'type': 'Return', 'children': [83]}
2401:{'type': 'Module', 'children': [1]}
2401:{'type': 'ClassDef', 'children': [2, 4, 73], 'value': 'Solution'}
2401:{'type': 'bases', 'children': [3]}
2401:{'type': 'body', 'children': [5]}
2401:{'type': 'FunctionDef', 'children': [6, 11, 72], 'value': 'productExceptSelf'}
2401:{'type': 'NameParam', 'value': 'nums'}
2401:{'type': 'defaults'}
2401:{'type': 'body', 'children': [12, 20, 23, 43, 46, 70]}
2401:{'type': 'Assign', 'children': [13, 14]}
2401:{'type': 'NameStore', 'value': 'res'}
2401:{'type': 'BinOpMult', 'children': [15, 17]}
2401:{'type': 'ListLoad', 'children': [16]}
2401:{'type': 'Num', 'value': '1'}
2401:{'type': 'Call', 'children': [18, 19]}
2401:{'type': 'NameLoad', 'value': 'len'}
2401:{'type': 'Assign', 'children': [21, 22]}
2401:{'type': 'Num', 'value': '1'}
2401:{'type': 'For', 'children': [24, 25, 30]}
2401:{'type': 'NameStore', 'value': 'i'}
2401:{'type': 'Call', 'children': [26, 27]}
2401:{'type': 'Call', 'children': [28, 29]}
2401:{'type': 'NameLoad', 'value': 'len'}
2401:{'type': 'NameLoad', 'value': 'nums'}
2401:{'type': 'NameLoad', 'value': 'res'}
2401:{'type': 'Index', 'children': [35]}
2401:{'type': 'NameLoad', 'value': 'i'}
2401:{'type': 'NameLoad', 'value': 'left_prod'}
2401:{'type': 'NameStore', 'value': 'left_prod'}
2401:{'type': 'NameLoad', 'value': 'nums'}
2401:{'type': 'Index', 'children': [42]}
2401:{'type': 'NameLoad', 'value': 'i'}
2401:{'type': 'Assign', 'children': [44, 45]}
2401:{'type': 'NameStore', 'value': 'right_prod'}
2401:{'type': 'Num', 'value': '1'}
2401:{'type': 'For', 'children': [47, 48, 57]}
2401:{'type': 'NameStore', 'value': 'i'}
2401:{'type': 'Call', 'children': [49, 50, 55, 56]}
2401:{'type': 'NameLoad', 'value': 'xrange'}
2401:{'type': 'BinOpSub', 'children': [51, 54]}
2401:{'type': 'NameLoad', 'value': 'nums'}
2401:{'type': 'Num', 'value': '1'}
2401:{'type': 'Num', 'value': '-1'}
2401:{'type': 'body', 'children': [58, 64]}
2401:{'type': 'AugAssignMult', 'children': [59, 63]}
2401:{'type': 'SubscriptStore', 'children': [60, 61]}
2401:{'type': 'NameLoad', 'value': 'res'}
2401:{'type': 'AugAssignMult', 'children': [65, 66]}
2401:{'type': 'NameStore', 'value': 'right_prod'}
2401:{'type': 'SubscriptLoad', 'children': [67, 68]}
2401:{'type': 'NameLoad', 'value': 'nums'}
2401:{'type': 'Index', 'children': [69]}
2401:{'type': 'NameLoad', 'value': 'i'}
2401:{'type': 'Return', 'children': [71]}
2402:{'type': 'Assign', 'children': [33, 34]}
2402:{'type': 'Index', 'children': [59]}
2402:{'type': 'BinOpMult', 'children': [69, 73]}
2403:{'type': 'body', 'children': [5]}
2403:{'type': 'FunctionDef', 'children': [6, 11, 81], 'value': 'productExceptSelf'}
2403:{'type': 'body', 'children': [12, 15, 18, 31, 34, 79]}
2403:{'type': 'Assign', 'children': [16, 17]}
2403:{'type': 'NameStore', 'value': 'p'}
2403:{'type': 'NameStore', 'value': 'i'}
2403:{'type': 'NameLoad', 'value': 'nums'}
2403:{'type': 'body', 'children': [22, 25]}
2403:{'type': 'Expr', 'children': [26]}
2403:{'type': 'attr', 'value': 'append'}
2403:{'type': 'Assign', 'children': [32, 33]}
2403:{'type': 'For', 'children': [35, 36, 45]}
2403:{'type': 'NameLoad', 'value': 'xrange'}
2403:{'type': 'BinOpSub', 'children': [39, 42]}
2403:{'type': 'Call', 'children': [40, 41]}
2403:{'type': 'Num', 'value': '1'}
2403:{'type': 'BinOpSub', 'children': [49, 50]}
2403:{'type': 'Assign', 'children': [54, 58]}
2403:{'type': 'SubscriptStore', 'children': [55, 56]}
2403:{'type': 'NameLoad', 'value': 'lis'}
2403:{'type': 'Num', 'value': '0'}
2403:{'type': 'NameLoad', 'value': 'p'}
2403:{'type': 'Assign', 'children': [61, 65]}
2403:{'type': 'NameLoad', 'value': 'lis'}
2403:{'type': 'Index', 'children': [64]}
2403:{'type': 'BinOpSub', 'children': [70, 71]}
2403:{'type': 'NameLoad', 'value': 'i'}
2403:{'type': 'AugAssignMult', 'children': [74, 75]}
2403:{'type': 'NameStore', 'value': 'p'}
2403:{'type': 'NameLoad', 'value': 'nums'}
2403:{'type': 'Index', 'children': [78]}
2403:{'type': 'NameLoad', 'value': 'lis'}
2404:{'type': 'NameLoad', 'value': 'len'}
2404:{'type': 'CompareLtE', 'children': [19, 20]}
2404:{'type': 'NameLoad', 'value': 'nums'}
2404:{'type': 'Num', 'value': '1'}
2404:{'type': 'Num', 'value': '1'}
2404:{'type': 'NameStore', 'value': 'i'}
2404:{'type': 'NameLoad', 'value': 'xrange'}
2404:{'type': 'AugAssignMult', 'children': [40, 44]}
2404:{'type': 'SubscriptStore', 'children': [41, 42]}
2404:{'type': 'SubscriptLoad', 'children': [48, 49]}
2404:{'type': 'Index', 'children': [50]}
2404:{'type': 'NameStore', 'value': 'cum_prod'}
2404:{'type': 'Num', 'value': '1'}
2404:{'type': 'AugAssignMult', 'children': [65, 69]}
2404:{'type': 'SubscriptStore', 'children': [66, 67]}
2404:{'type': 'NameStore', 'value': 'cum_prod'}
2404:{'type': 'SubscriptLoad', 'children': [73, 74]}
2404:{'type': 'NameLoad', 'value': 'nums'}
2404:{'type': 'NameLoad', 'value': 'i'}
2404:{'type': 'Return', 'children': [77]}
2406:{'type': 'Module', 'children': [1]}
2406:{'type': 'ClassDef', 'children': [2, 4, 79], 'value': 'Solution'}
2406:{'type': 'FunctionDef', 'children': [6, 11, 78], 'value': 'productExceptSelf'}
2406:{'type': 'args', 'children': [8, 9]}
2406:{'type': 'defaults'}
2406:{'type': 'CompareLtE', 'children': [19, 20]}
2406:{'type': 'NameLoad', 'value': 'n'}
2406:{'type': 'Num', 'value': '1'}
2406:{'type': 'BinOpMult', 'children': [27, 29]}
2406:{'type': 'ListLoad', 'children': [28]}
2406:{'type': 'NameLoad', 'value': 'n'}
2406:{'type': 'Assign', 'children': [31, 32]}
2406:{'type': 'Num', 'value': '1'}
2406:{'type': 'NameLoad', 'value': 'n'}
2406:{'type': 'SubscriptStore', 'children': [41, 42]}
2406:{'type': 'Index', 'children': [43]}
2406:{'type': 'NameLoad', 'value': 'i'}
2406:{'type': 'AugAssignMult', 'children': [46, 47]}
2406:{'type': 'SubscriptLoad', 'children': [48, 49]}
2406:{'type': 'NameStore', 'value': 'cum_prod'}
2406:{'type': 'For', 'children': [55, 56, 63]}
2406:{'type': 'NameStore', 'value': 'i'}
2406:{'type': 'NameLoad', 'value': 'xrange'}
2406:{'type': 'NameLoad', 'value': 'i'}
2406:{'type': 'NameLoad', 'value': 'i'}
2406:{'type': 'Return', 'children': [77]}
2407:{'type': 'Index', 'children': [70]}
2407:{'type': 'NameLoad', 'value': 'len'}
2407:{'type': 'NameStore', 'value': 'L'}
2415:{'type': 'arguments', 'children': [7, 10]}
2415:{'type': 'NameStore', 'value': 'res'}
2415:{'type': 'BinOpMult', 'children': [15, 17]}
2415:{'type': 'NameLoad', 'value': 'res'}
2415:{'type': 'SubscriptLoad', 'children': [42, 43]}
2415:{'type': 'NameStore', 'value': 'idx'}
2415:{'type': 'Num', 'value': '-1'}
2415:{'type': 'body', 'children': [62, 70]}
2415:{'type': 'NameLoad', 'value': 'nums'}
2415:{'type': 'SubscriptStore', 'children': [72, 73]}
2426:{'type': 'FunctionDef', 'children': [6, 11, 63], 'value': 'productExceptSelf'}
2426:{'type': 'NameParam', 'value': 'self'}
2426:{'type': 'defaults'}
2426:{'type': 'NameStore', 'value': 'n'}
2426:{'type': 'NameStore', 'value': 'res'}
2426:{'type': 'BinOpMult', 'children': [20, 22]}
2426:{'type': 'NameLoad', 'value': 'n'}
2426:{'type': 'Num', 'value': '1'}
2426:{'type': 'Assign', 'children': [27, 28]}
2426:{'type': 'Num', 'value': '1'}
2426:{'type': 'For', 'children': [30, 31, 34]}
2426:{'type': 'NameLoad', 'value': 'xrange'}
2426:{'type': 'SubscriptStore', 'children': [37, 38]}
2426:{'type': 'Index', 'children': [39]}
2426:{'type': 'AugAssignMult', 'children': [42, 47]}
2426:{'type': 'Index', 'children': [45]}
2426:{'type': 'NameLoad', 'value': 'i'}
2426:{'type': 'AugAssignMult', 'children': [49, 50]}
2426:{'type': 'NameStore', 'value': 'left'}
2426:{'type': 'NameLoad', 'value': 'i'}
2426:{'type': 'AugAssignMult', 'children': [55, 56]}
2426:{'type': 'UnaryOpInvert', 'children': [60]}
2426:{'type': 'NameLoad', 'value': 'i'}
2426:{'type': 'decorator_list'}
2427:{'type': 'body', 'children': [32, 38]}
2427:{'type': 'NameStore', 'value': 'R'}
2428:{'type': 'NameParam', 'value': 'self'}
2428:{'type': 'NameParam', 'value': 'nums'}
2428:{'type': 'Call', 'children': [15, 16]}
2428:{'type': 'NameStore', 'value': '_'}
2428:{'type': 'Assign', 'children': [27, 28, 29]}
2428:{'type': 'NameStore', 'value': 'i'}
2428:{'type': 'NameLoad', 'value': 'xrange'}
2428:{'type': 'body', 'children': [36, 42]}
2428:{'type': 'Index', 'children': [40]}
2428:{'type': 'NameLoad', 'value': 'i'}
2428:{'type': 'NameLoad', 'value': 'prefix'}
2428:{'type': 'SubscriptLoad', 'children': [45, 46]}
2428:{'type': 'body', 'children': [58, 64]}
2428:{'type': 'NameLoad', 'value': 'res'}
2428:{'type': 'Index', 'children': [69]}
2428:{'type': 'Return', 'children': [71]}
2430:{'type': 'Module', 'children': [1]}
2430:{'type': 'ClassDef', 'children': [2, 4, 85], 'value': 'Solution'}
2430:{'type': 'body', 'children': [5]}
2430:{'type': 'arguments', 'children': [7, 10]}
2430:{'type': 'NameParam', 'value': 'nums'}
2430:{'type': 'body', 'children': [12, 17, 23, 29, 54, 57, 82]}
2430:{'type': 'NameLoad', 'value': 'len'}
2430:{'type': 'Num', 'value': '0'}
2430:{'type': 'Assign', 'children': [24, 28]}
2430:{'type': 'NameLoad', 'value': 'answer'}
2430:{'type': 'Num', 'value': '1'}
2430:{'type': 'For', 'children': [30, 31, 35]}
2430:{'type': 'NameStore', 'value': 'i'}
2430:{'type': 'Call', 'children': [32, 33, 34]}
2430:{'type': 'Num', 'value': '1'}
2430:{'type': 'Assign', 'children': [37, 41]}
2430:{'type': 'Index', 'children': [40]}
2430:{'type': 'NameLoad', 'value': 'i'}
2430:{'type': 'BinOpMult', 'children': [42, 48]}
2430:{'type': 'SubscriptLoad', 'children': [43, 44]}
2430:{'type': 'Index', 'children': [45]}
2430:{'type': 'BinOpSub', 'children': [46, 47]}
2430:{'type': 'NameLoad', 'value': 'i'}
2430:{'type': 'Num', 'value': '1'}
2430:{'type': 'SubscriptLoad', 'children': [49, 50]}
2430:{'type': 'NameLoad', 'value': 'answer'}
2430:{'type': 'BinOpSub', 'children': [52, 53]}
2430:{'type': 'NameStore', 'value': 'R'}
2430:{'type': 'NameStore', 'value': 'i'}
2430:{'type': 'Call', 'children': [60, 61]}
2430:{'type': 'Index', 'children': [69]}
2430:{'type': 'SubscriptLoad', 'children': [72, 73]}
2430:{'type': 'NameLoad', 'value': 'answer'}
2430:{'type': 'NameLoad', 'value': 'R'}
2430:{'type': 'SubscriptLoad', 'children': [79, 80]}
2430:{'type': 'Index', 'children': [81]}
2430:{'type': 'Return', 'children': [83]}
2430:{'type': 'NameLoad', 'value': 'answer'}
2431:{'type': 'Module', 'children': [1]}
2431:{'type': 'arguments', 'children': [7, 10]}
2431:{'type': 'args', 'children': [8, 9]}
2431:{'type': 'NameStore', 'value': 'left_mult'}
2431:{'type': 'ListComp', 'children': [15, 16]}
2431:{'type': 'Num', 'value': '1'}
2431:{'type': 'NameStore', 'value': 'i'}
2431:{'type': 'NameLoad', 'value': 'nums'}
2431:{'type': 'For', 'children': [20, 21, 27]}
2431:{'type': 'NameStore', 'value': 'i'}
2431:{'type': 'Num', 'value': '1'}
2431:{'type': 'Index', 'children': [32]}
2431:{'type': 'NameLoad', 'value': 'i'}
2431:{'type': 'SubscriptLoad', 'children': [35, 36]}
2431:{'type': 'BinOpSub', 'children': [38, 39]}
2431:{'type': 'SubscriptLoad', 'children': [41, 42]}
2431:{'type': 'NameLoad', 'value': 'nums'}
2431:{'type': 'Assign', 'children': [47, 48]}
2431:{'type': 'NameStore', 'value': 'result'}
2431:{'type': 'Num', 'value': '1'}
2431:{'type': 'comprehension', 'children': [51, 52]}
2431:{'type': 'NameStore', 'value': 'i'}
2431:{'type': 'NameLoad', 'value': 'nums'}
2431:{'type': 'Assign', 'children': [54, 55]}
2431:{'type': 'Call', 'children': [59, 60, 65, 66]}
2431:{'type': 'Call', 'children': [62, 63]}
2431:{'type': 'NameLoad', 'value': 'len'}
2431:{'type': 'NameLoad', 'value': 'nums'}
2431:{'type': 'Num', 'value': '-1'}
2431:{'type': 'NameLoad', 'value': 'result'}
2431:{'type': 'Index', 'children': [72]}
2431:{'type': 'SubscriptLoad', 'children': [75, 76]}
2431:{'type': 'NameLoad', 'value': 'left_mult'}
2431:{'type': 'NameLoad', 'value': 'right_mult'}
2431:{'type': 'Assign', 'children': [80, 81]}
2431:{'type': 'BinOpMult', 'children': [82, 83]}
2431:{'type': 'NameLoad', 'value': 'right_mult'}
2431:{'type': 'NameLoad', 'value': 'nums'}
2431:{'type': 'Index', 'children': [86]}
2431:{'type': 'NameLoad', 'value': 'j'}
2431:{'type': 'NameLoad', 'value': 'result'}
3332:{'type': 'Module', 'children': [1]}
3332:{'type': 'bases', 'children': [3]}
3332:{'type': 'NameLoad', 'value': 'object'}
3332:{'type': 'body', 'children': [5]}
3332:{'type': 'FunctionDef', 'children': [6, 11, 97], 'value': 'productExceptSelf'}
3332:{'type': 'args', 'children': [8, 9]}
3332:{'type': 'NameParam', 'value': 'self'}
3332:{'type': 'NameParam', 'value': 'nums'}
3332:{'type': 'defaults'}
3332:{'type': 'body', 'children': [12, 21, 32, 59, 62, 95]}
3332:{'type': 'CompareEq', 'children': [14, 17]}
3332:{'type': 'NameLoad', 'value': 'nums'}
3332:{'type': 'Num', 'value': '0'}
3332:{'type': 'Assign', 'children': [22, 23]}
3332:{'type': 'NameStore', 'value': 'output'}
3332:{'type': 'ListComp', 'children': [24, 25]}
3332:{'type': 'Num', 'value': '1'}
3332:{'type': 'comprehension', 'children': [26, 27]}
3332:{'type': 'Call', 'children': [28, 29]}
3332:{'type': 'NameLoad', 'value': 'nums'}
3332:{'type': 'For', 'children': [33, 34, 40]}
3332:{'type': 'Num', 'value': '1'}
3332:{'type': 'NameLoad', 'value': 'len'}
3332:{'type': 'NameLoad', 'value': 'nums'}
3332:{'type': 'body', 'children': [41]}
3332:{'type': 'SubscriptStore', 'children': [43, 44]}
3332:{'type': 'NameLoad', 'value': 'i'}
3332:{'type': 'Index', 'children': [50]}
3332:{'type': 'BinOpSub', 'children': [51, 52]}
3332:{'type': 'Num', 'value': '1'}
3332:{'type': 'SubscriptLoad', 'children': [54, 55]}
3332:{'type': 'NameLoad', 'value': 'nums'}
3332:{'type': 'Num', 'value': '1'}
3332:{'type': 'Assign', 'children': [60, 61]}
3332:{'type': 'For', 'children': [63, 64, 73]}
3332:{'type': 'NameStore', 'value': 'i'}
3332:{'type': 'Call', 'children': [65, 66]}
3332:{'type': 'Call', 'children': [67, 68]}
3332:{'type': 'NameLoad', 'value': 'xrange'}
3332:{'type': 'Call', 'children': [70, 71]}
3332:{'type': 'NameLoad', 'value': 'nums'}
3332:{'type': 'body', 'children': [74, 84]}
3332:{'type': 'BinOpMult', 'children': [77, 78]}
3332:{'type': 'NameLoad', 'value': 'val'}
3332:{'type': 'NameLoad', 'value': 'nums'}
3332:{'type': 'Index', 'children': [81]}
3332:{'type': 'BinOpAdd', 'children': [82, 83]}
3332:{'type': 'NameLoad', 'value': 'i'}
3332:{'type': 'Num', 'value': '1'}
3332:{'type': 'SubscriptStore', 'children': [86, 87]}
3332:{'type': 'Index', 'children': [88]}
3332:{'type': 'SubscriptLoad', 'children': [91, 92]}
3332:{'type': 'decorator_list'}
3340:{'type': 'body', 'children': [5]}
3340:{'type': 'arguments', 'children': [7, 10]}
3340:{'type': 'args', 'children': [8, 9]}
3340:{'type': 'NameParam', 'value': 'nums'}
3340:{'type': 'defaults'}
3340:{'type': 'Assign', 'children': [13, 14]}
3340:{'type': 'NameStore', 'value': 'p'}
3340:{'type': 'Num', 'value': '1'}
3340:{'type': 'NameStore', 'value': 'output'}
3340:{'type': 'Call', 'children': [26, 27]}
3340:{'type': 'NameLoad', 'value': 'xrange'}
3340:{'type': 'NameLoad', 'value': 'n'}
3340:{'type': 'body', 'children': [29, 35]}
3340:{'type': 'Expr', 'children': [30]}
3340:{'type': 'AttributeLoad', 'children': [32, 33]}
3340:{'type': 'NameLoad', 'value': 'output'}
3340:{'type': 'Assign', 'children': [36, 37]}
3340:{'type': 'NameStore', 'value': 'p'}
3340:{'type': 'BinOpMult', 'children': [38, 39]}
3340:{'type': 'NameLoad', 'value': 'nums'}
3340:{'type': 'NameLoad', 'value': 'i'}
3340:{'type': 'NameStore', 'value': 'p'}
3340:{'type': 'Num', 'value': '1'}
3340:{'type': 'For', 'children': [47, 48, 55]}
3340:{'type': 'NameStore', 'value': 'i'}
3340:{'type': 'Call', 'children': [49, 50, 53, 54]}
3340:{'type': 'NameLoad', 'value': 'n'}
3340:{'type': 'Assign', 'children': [57, 61]}
3340:{'type': 'SubscriptStore', 'children': [58, 59]}
3340:{'type': 'SubscriptLoad', 'children': [63, 64]}
3340:{'type': 'NameLoad', 'value': 'i'}
3340:{'type': 'NameLoad', 'value': 'p'}
3340:{'type': 'Assign', 'children': [68, 69]}
3340:{'type': 'NameStore', 'value': 'p'}
3340:{'type': 'NameLoad', 'value': 'p'}
3340:{'type': 'SubscriptLoad', 'children': [72, 73]}
3340:{'type': 'NameLoad', 'value': 'nums'}
3340:{'type': 'NameLoad', 'value': 'i'}
3340:{'type': 'NameLoad', 'value': 'output'}
91
2437:{'type': 'ClassDef', 'children': [2, 4, 87], 'value': 'Solution'}
2437:{'type': 'bases', 'children': [3]}
2437:{'type': 'NameLoad', 'value': 'object'}
2437:{'type': 'body', 'children': [5]}
2437:{'type': 'FunctionDef', 'children': [6, 11, 86], 'value': 'moveZeroes'}
2437:{'type': 'arguments', 'children': [7, 10]}
2437:{'type': 'args', 'children': [8, 9]}
2437:{'type': 'NameParam', 'value': 'self'}
2437:{'type': 'NameParam', 'value': 'nums'}
2437:{'type': 'Assign', 'children': [13, 14, 15]}
2437:{'type': 'Num', 'value': '0'}
2437:{'type': 'Assign', 'children': [17, 18]}
2437:{'type': 'NameLoad', 'value': 'len'}
2437:{'type': 'NameLoad', 'value': 'nums'}
2437:{'type': 'While', 'children': [22, 23]}
2437:{'type': 'body', 'children': [24, 39, 44, 59, 67]}
2437:{'type': 'While', 'children': [25, 35]}
2437:{'type': 'CompareLt', 'children': [27, 28]}
2437:{'type': 'NameLoad', 'value': 'left'}
2437:{'type': 'CompareNotEq', 'children': [30, 34]}
2437:{'type': 'SubscriptLoad', 'children': [31, 32]}
2437:{'type': 'NameLoad', 'value': 'nums'}
2437:{'type': 'Index', 'children': [33]}
2437:{'type': 'Num', 'value': '0'}
2437:{'type': 'body', 'children': [36]}
2437:{'type': 'AugAssignAdd', 'children': [37, 38]}
2437:{'type': 'NameStore', 'value': 'left'}
2437:{'type': 'Num', 'value': '1'}
2437:{'type': 'Assign', 'children': [40, 41]}
2437:{'type': 'NameStore', 'value': 'right'}
2437:{'type': 'BinOpAdd', 'children': [42, 43]}
2437:{'type': 'Num', 'value': '1'}
2437:{'type': 'While', 'children': [45, 55]}
2437:{'type': 'BoolOpAnd', 'children': [46, 49]}
2437:{'type': 'CompareLt', 'children': [47, 48]}
2437:{'type': 'NameLoad', 'value': 'N'}
2437:{'type': 'CompareEq', 'children': [50, 54]}
2437:{'type': 'SubscriptLoad', 'children': [51, 52]}
2437:{'type': 'NameLoad', 'value': 'nums'}
2437:{'type': 'NameLoad', 'value': 'right'}
2437:{'type': 'Num', 'value': '0'}
2437:{'type': 'body', 'children': [56]}
2437:{'type': 'AugAssignAdd', 'children': [57, 58]}
2437:{'type': 'NameStore', 'value': 'right'}
2437:{'type': 'Num', 'value': '1'}
2437:{'type': 'If', 'children': [60, 65]}
2437:{'type': 'CompareGtE', 'children': [61, 62]}
2437:{'type': 'Call', 'children': [63, 64]}
2437:{'type': 'NameLoad', 'value': 'len'}
2437:{'type': 'Return'}
2437:{'type': 'Assign', 'children': [68, 77]}
2437:{'type': 'TupleStore', 'children': [69, 73]}
2437:{'type': 'SubscriptStore', 'children': [70, 71]}
2437:{'type': 'NameLoad', 'value': 'nums'}
2437:{'type': 'Index', 'children': [72]}
2437:{'type': 'NameLoad', 'value': 'left'}
2437:{'type': 'SubscriptStore', 'children': [74, 75]}
2437:{'type': 'NameLoad', 'value': 'nums'}
2437:{'type': 'Index', 'children': [76]}
2437:{'type': 'NameLoad', 'value': 'right'}
2437:{'type': 'TupleLoad', 'children': [78, 82]}
2437:{'type': 'SubscriptLoad', 'children': [79, 80]}
2437:{'type': 'NameLoad', 'value': 'nums'}
2437:{'type': 'Index', 'children': [81]}
2437:{'type': 'SubscriptLoad', 'children': [83, 84]}
2437:{'type': 'NameLoad', 'value': 'nums'}
2437:{'type': 'Index', 'children': [85]}
2441:{'type': 'ClassDef', 'children': [2, 4, 73], 'value': 'Solution'}
2441:{'type': 'bases', 'children': [3]}
2441:{'type': 'NameLoad', 'value': 'object'}
2441:{'type': 'body', 'children': [5]}
2441:{'type': 'FunctionDef', 'children': [6, 11, 72], 'value': 'moveZeroes'}
2441:{'type': 'args', 'children': [8, 9]}
2441:{'type': 'NameParam', 'value': 'self'}
2441:{'type': 'NameParam', 'value': 'nums'}
2441:{'type': 'NameStore', 'value': 'zero_finder'}
2441:{'type': 'Num', 'value': '-1'}
2441:{'type': 'Assign', 'children': [16, 17]}
2441:{'type': 'NameStore', 'value': 'zero_placer'}
2441:{'type': 'Num', 'value': '-1'}
2441:{'type': 'For', 'children': [19, 20, 29]}
2441:{'type': 'NameStore', 'value': 'i'}
2441:{'type': 'Call', 'children': [21, 22, 27, 28]}
2441:{'type': 'NameLoad', 'value': 'xrange'}
2441:{'type': 'BinOpSub', 'children': [23, 26]}
2441:{'type': 'Call', 'children': [24, 25]}
2441:{'type': 'Num', 'value': '1'}
2441:{'type': 'Num', 'value': '-1'}
2441:{'type': 'Num', 'value': '-1'}
2441:{'type': 'If', 'children': [31, 37]}
2441:{'type': 'CompareEq', 'children': [32, 36]}
2441:{'type': 'SubscriptLoad', 'children': [33, 34]}
2441:{'type': 'Index', 'children': [35]}
2441:{'type': 'NameLoad', 'value': 'i'}
2441:{'type': 'Num', 'value': '0'}
2441:{'type': 'NameLoad', 'value': 'i'}
2441:{'type': 'For', 'children': [42, 43, 51]}
2441:{'type': 'NameStore', 'value': 'i'}
2441:{'type': 'Call', 'children': [44, 45, 48]}
2441:{'type': 'BinOpAdd', 'children': [46, 47]}
2441:{'type': 'Num', 'value': '1'}
2441:{'type': 'Call', 'children': [49, 50]}
2441:{'type': 'NameLoad', 'value': 'len'}
2441:{'type': 'NameLoad', 'value': 'nums'}
2441:{'type': 'Assign', 'children': [53, 59]}
2441:{'type': 'Index', 'children': [56]}
2441:{'type': 'BinOpSub', 'children': [57, 58]}
2441:{'type': 'NameLoad', 'value': 'i'}
2441:{'type': 'Num', 'value': '1'}
2441:{'type': 'SubscriptLoad', 'children': [60, 61]}
2441:{'type': 'NameLoad', 'value': 'nums'}
2441:{'type': 'Index', 'children': [62]}
2441:{'type': 'NameLoad', 'value': 'i'}
2441:{'type': 'NameLoad', 'value': 'nums'}
2441:{'type': 'NameLoad', 'value': 'zero_placer'}
2441:{'type': 'Num', 'value': '0'}
2441:{'type': 'NameStore', 'value': 'zero_placer'}
2441:{'type': 'Num', 'value': '1'}
92
93
2488:{'type': 'bases', 'children': [3]}
2488:{'type': 'NameLoad', 'value': 'object'}
2488:{'type': 'args', 'children': [8, 9]}
2488:{'type': 'NameParam', 'value': 'nums'}
2488:{'type': 'Assign', 'children': [13, 14]}
2488:{'type': 'NameLoad', 'value': 'list'}
2488:{'type': 'attr', 'value': 'fromkeys'}
2488:{'type': 'Expr', 'children': [22]}
2488:{'type': 'NameLoad', 'value': 'desc_arr'}
2488:{'type': 'If', 'children': [29, 34, 40]}
2488:{'type': 'CompareLt', 'children': [30, 33]}
2488:{'type': 'Call', 'children': [31, 32]}
2488:{'type': 'NameLoad', 'value': 'len'}
2488:{'type': 'NameLoad', 'value': 'desc_arr'}
2488:{'type': 'Return', 'children': [36]}
2488:{'type': 'NameLoad', 'value': 'desc_arr'}
2488:{'type': 'Num', 'value': '0'}
2488:{'type': 'NameLoad', 'value': 'desc_arr'}
2488:{'type': 'Index', 'children': [45]}
2488:{'type': 'decorator_list'}
2490:{'type': 'Module', 'children': [1]}
2490:{'type': 'body', 'children': [5]}
2490:{'type': 'arguments', 'children': [7, 10]}
2490:{'type': 'defaults'}
2490:{'type': 'body', 'children': [12, 19, 61]}
2490:{'type': 'Assign', 'children': [13, 14, 15, 16]}
2490:{'type': 'Call', 'children': [17, 18]}
2490:{'type': 'NameLoad', 'value': 'float'}
2490:{'type': 'Str', 'value': '-inf'}
2490:{'type': 'NameLoad', 'value': 'nums'}
2490:{'type': 'CompareGt', 'children': [25, 26]}
2490:{'type': 'NameLoad', 'value': 'n'}
2490:{'type': 'NameLoad', 'value': 'max_'}
2490:{'type': 'NameLoad', 'value': 'n'}
2490:{'type': 'If', 'children': [39, 43, 51]}
2490:{'type': 'CompareGtGt', 'children': [40, 41, 42]}
2490:{'type': 'NameLoad', 'value': 'mid'}
2490:{'type': 'body', 'children': [44]}
2490:{'type': 'Assign', 'children': [45, 48]}
2490:{'type': 'TupleLoad', 'children': [49, 50]}
2490:{'type': 'orelse', 'children': [52]}
2490:{'type': 'NameLoad', 'value': 'n'}
2490:{'type': 'NameStore', 'value': 'min_'}
2490:{'type': 'NameLoad', 'value': 'n'}
2490:{'type': 'Return', 'children': [62]}
2490:{'type': 'BoolOpOr', 'children': [64, 69]}
2490:{'type': 'Call', 'children': [67, 68]}
2490:{'type': 'Str', 'value': '-inf'}
2490:{'type': 'NameLoad', 'value': 'min_'}
2490:{'type': 'Call', 'children': [72, 73]}
2490:{'type': 'NameLoad', 'value': 'min_'}
2490:{'type': 'decorator_list'}
2491:{'type': 'Module', 'children': [1]}
2491:{'type': 'NameLoad', 'value': 'object'}
2491:{'type': 'arguments', 'children': [7, 10]}
2491:{'type': 'args', 'children': [8, 9]}
2491:{'type': 'body', 'children': [12, 21]}
2491:{'type': 'Assign', 'children': [13, 14]}
2491:{'type': 'Call', 'children': [15, 16]}
2491:{'type': 'NameLoad', 'value': 'sorted'}
2491:{'type': 'NameLoad', 'value': 'list'}
2491:{'type': 'NameLoad', 'value': 'set'}
2491:{'type': 'CompareLt', 'children': [23, 26]}
2491:{'type': 'Call', 'children': [30, 31]}
2491:{'type': 'NameLoad', 'value': 'max'}
2491:{'type': 'orelse', 'children': [33, 38]}
2491:{'type': 'Expr', 'children': [34]}
2491:{'type': 'Call', 'children': [35]}
2491:{'type': 'AttributeLoad', 'children': [36, 37]}
2491:{'type': 'attr', 'value': 'reverse'}
2491:{'type': 'Return', 'children': [39]}
2491:{'type': 'SubscriptLoad', 'children': [40, 41]}
2491:{'type': 'NameLoad', 'value': 'tmp'}
2491:{'type': 'Num', 'value': '2'}
2491:{'type': 'decorator_list'}
2492:{'type': 'FunctionDef', 'children': [6, 11, 54], 'value': 'thirdMax'}
2492:{'type': 'args', 'children': [8, 9]}
2492:{'type': 'NameParam', 'value': 'self'}
2492:{'type': 'Call', 'children': [17, 18]}
2492:{'type': 'NameLoad', 'value': 'nums'}
2492:{'type': 'If', 'children': [20, 25, 30]}
2492:{'type': 'CompareLt', 'children': [21, 24]}
2492:{'type': 'Call', 'children': [22, 23]}
2492:{'type': 'NameLoad', 'value': 'max'}
2492:{'type': 'Assign', 'children': [32, 33]}
2492:{'type': 'Call', 'children': [41, 44]}
2492:{'type': 'NameLoad', 'value': 'nums'}
2492:{'type': 'AugAssignSub', 'children': [48, 49]}
2492:{'type': 'NameStore', 'value': 'x'}
2492:{'type': 'Return', 'children': [51]}
2492:{'type': 'NameLoad', 'value': 'max'}
3373:{'type': 'bases', 'children': [3]}
3373:{'type': 'arguments', 'children': [7, 10]}
3373:{'type': 'args', 'children': [8, 9]}
3373:{'type': 'defaults'}
3373:{'type': 'Call', 'children': [18, 19, 20]}
3373:{'type': 'Index', 'children': [27]}
3373:{'type': 'Call', 'children': [31, 32]}
3373:{'type': 'body', 'children': [35]}
3373:{'type': 'Return', 'children': [36]}
3373:{'type': 'Num', 'value': '0'}
3373:{'type': 'NameLoad', 'value': 'xrange'}
3373:{'type': 'body', 'children': [50]}
3373:{'type': 'If', 'children': [51, 57]}
3373:{'type': 'Index', 'children': [55]}
3373:{'type': 'body', 'children': [58, 61, 67]}
3373:{'type': 'Num', 'value': '1'}
3373:{'type': 'NameStore', 'value': 'temp'}
3373:{'type': 'NameLoad', 'value': 'newList'}
3373:{'type': 'Index', 'children': [76]}
3373:{'type': 'NameLoad', 'value': 'count'}
3373:{'type': 'Num', 'value': '3'}
3373:{'type': 'body', 'children': [82]}
3373:{'type': 'decorator_list'}
3374:{'type': 'Call', 'children': [15]}
3374:{'type': 'NameLoad', 'value': 'nums'}
3374:{'type': 'NameLoad', 'value': 'num'}
3374:{'type': 'AttributeLoad', 'children': [36, 37]}
3374:{'type': 'Num', 'value': '3'}
3374:{'type': 'Return', 'children': [49]}
3374:{'type': 'NameLoad', 'value': 'max'}
3375:{'type': 'NameLoad', 'value': 'object'}
3375:{'type': 'body', 'children': [5]}
3375:{'type': 'NameParam', 'value': 'self'}
3375:{'type': 'body', 'children': [12, 16, 41, 52]}
3375:{'type': 'Call', 'children': [15]}
3375:{'type': 'For', 'children': [17, 18, 19]}
3375:{'type': 'NameLoad', 'value': 'nums'}
3375:{'type': 'NameLoad', 'value': 'num'}
3375:{'type': 'NameLoad', 'value': 'len'}
3375:{'type': 'Num', 'value': '3'}
3375:{'type': 'body', 'children': [33]}
3375:{'type': 'Expr', 'children': [34]}
3375:{'type': 'Call', 'children': [35, 38]}
3375:{'type': 'NameLoad', 'value': 'min'}
3375:{'type': 'If', 'children': [42, 47]}
3375:{'type': 'NameLoad', 'value': 'maximums'}
3375:{'type': 'Num', 'value': '3'}
3375:{'type': 'body', 'children': [48]}
3375:{'type': 'Return', 'children': [49]}
3375:{'type': 'NameLoad', 'value': 'maximums'}
3375:{'type': 'NameLoad', 'value': 'max'}
3380:{'type': 'Module', 'children': [1]}
3380:{'type': 'bases', 'children': [3]}
3380:{'type': 'NameLoad', 'value': 'object'}
3380:{'type': 'body', 'children': [5]}
3380:{'type': 'NameParam', 'value': 'self'}
3380:{'type': 'NameParam', 'value': 'nums'}
3380:{'type': 'Assign', 'children': [13, 14]}
3380:{'type': 'NameLoad', 'value': 'sorted'}
3380:{'type': 'Call', 'children': [17, 18]}
3380:{'type': 'NameLoad', 'value': 'list'}
3380:{'type': 'CompareLt', 'children': [23, 26]}
3380:{'type': 'Call', 'children': [24, 25]}
3380:{'type': 'NameLoad', 'value': 'nums'}
3380:{'type': 'Return', 'children': [29]}
3380:{'type': 'NameLoad', 'value': 'nums'}
3380:{'type': 'orelse', 'children': [33]}
3380:{'type': 'Return', 'children': [34]}
3380:{'type': 'NameLoad', 'value': 'nums'}
3380:{'type': 'Num', 'value': '-3'}
3383:{'type': 'NameParam', 'value': 'nums'}
3383:{'type': 'NameLoad', 'value': 'n'}
3383:{'type': 'NameLoad', 'value': 'max_list'}
3383:{'type': 'Call', 'children': [37, 38]}
3383:{'type': 'Slice', 'children': [46]}
3385:{'type': 'alias', 'value': 'absolute_import'}
3385:{'type': 'bases', 'children': [5]}
3385:{'type': 'identifier', 'value': 'np'}
3385:{'type': 'NameLoad', 'value': 'np'}
3385:{'type': 'If', 'children': [25, 30, 36]}
3385:{'type': 'NameLoad', 'value': 'nums'}
3385:{'type': 'Num', 'value': '3'}
3385:{'type': 'NameLoad', 'value': 'nums'}
3385:{'type': 'Index', 'children': [35]}
3385:{'type': 'Return', 'children': [38]}
3385:{'type': 'NameLoad', 'value': 'max'}
94
2496:{'type': 'NameParam', 'value': 'self'}
2496:{'type': 'Assign', 'children': [13, 14]}
2496:{'type': 'NameStore', 'value': 'ans'}
2496:{'type': 'body', 'children': [24]}
2496:{'type': 'Expr', 'children': [30]}
2496:{'type': 'Call', 'children': [31, 34]}
2496:{'type': 'Call', 'children': [38, 41]}
2496:{'type': 'attr', 'value': 'add'}
2497:{'type': 'body', 'children': [12, 15, 74]}
2497:{'type': 'Assign', 'children': [39, 50]}
2497:{'type': 'Num', 'value': '1'}
2497:{'type': 'BinOpSub', 'children': [55, 61]}
2497:{'type': 'NameLoad', 'value': 'res'}
2501:{'type': 'body', 'children': [5]}
2501:{'type': 'Assign', 'children': [13, 14]}
2501:{'type': 'NameLoad', 'value': 'abs'}
2501:{'type': 'If', 'children': [25, 33, 40]}
2501:{'type': 'NameLoad', 'value': 'nums'}
2501:{'type': 'NameLoad', 'value': 'out'}
2501:{'type': 'NameLoad', 'value': 'j'}
2501:{'type': 'orelse', 'children': [41]}
2501:{'type': 'NameLoad', 'value': 'j'}
2501:{'type': 'decorator_list'}
3386:{'type': 'NameLoad', 'value': 'object'}
3386:{'type': 'defaults'}
3386:{'type': 'NameLoad', 'value': 'set'}
3386:{'type': 'Call', 'children': [30, 33]}
3386:{'type': 'NameLoad', 'value': 'ans'}
3386:{'type': 'attr', 'value': 'append'}
3387:{'type': 'ClassDef', 'children': [2, 4, 45], 'value': 'Solution'}
3387:{'type': 'Assign', 'children': [13, 14]}
3387:{'type': 'Dict'}
3387:{'type': 'NameStore', 'value': 'res'}
3387:{'type': 'body', 'children': [24]}
3387:{'type': 'orelse', 'children': [36]}
3387:{'type': 'AttributeLoad', 'children': [39, 40]}
3387:{'type': 'NameLoad', 'value': 'num'}
3389:{'type': 'bases', 'children': [3]}
3389:{'type': 'NameParam', 'value': 'self'}
3389:{'type': 'NameParam', 'value': 'nums'}
3389:{'type': 'body', 'children': [12, 15, 19, 41]}
3389:{'type': 'NameLoad', 'value': 'set'}
3389:{'type': 'NameStore', 'value': 'i'}
3389:{'type': 'NameLoad', 'value': 'nums'}
3389:{'type': 'NameLoad', 'value': 'i'}
3389:{'type': 'Call', 'children': [30, 33]}
3389:{'type': 'NameLoad', 'value': 's'}
3389:{'type': 'NameLoad', 'value': 'i'}
3389:{'type': 'Expr', 'children': [36]}
3389:{'type': 'Call', 'children': [37, 40]}
3389:{'type': 'NameLoad', 'value': 'res'}
3389:{'type': 'Return', 'children': [42]}
3390:{'type': 'bases', 'children': [3]}
3390:{'type': 'body', 'children': [5]}
3390:{'type': 'arguments', 'children': [7, 10]}
3390:{'type': 'NameStore', 'value': 'seen'}
3390:{'type': 'NameLoad', 'value': 'list'}
3390:{'type': 'body', 'children': [24]}
3390:{'type': 'CompareIn', 'children': [26, 27]}
3390:{'type': 'body', 'children': [29]}
3390:{'type': 'attr', 'value': 'add'}
3390:{'type': 'NameLoad', 'value': 'output'}
3391:{'type': 'args', 'children': [8, 9]}
3391:{'type': 'NameParam', 'value': 'self'}
3391:{'type': 'attr', 'value': 'get'}
3391:{'type': 'Return', 'children': [33]}
3391:{'type': 'NameStore', 'value': 'key'}
3391:{'type': 'CompareEq', 'children': [39, 43]}
3391:{'type': 'NameLoad', 'value': 'key'}
3391:{'type': 'Num', 'value': '2'}
3393:{'type': 'body', 'children': [5]}
3393:{'type': 'Assign', 'children': [13, 14]}
3393:{'type': 'Assign', 'children': [16, 17]}
3393:{'type': 'body', 'children': [27]}
3393:{'type': 'SubscriptLoad', 'children': [37, 38]}
3393:{'type': 'Num', 'value': '1'}
3393:{'type': 'Expr', 'children': [43]}
3393:{'type': 'AugAssignAdd', 'children': [49, 53]}
3393:{'type': 'NameLoad', 'value': 'seen'}
3393:{'type': 'NameLoad', 'value': 'x'}
3394:{'type': 'NameLoad', 'value': 'x'}
3394:{'type': 'Assign', 'children': [28, 32]}
3394:{'type': 'NameLoad', 'value': 'x'}
3394:{'type': 'decorator_list'}
3395:{'type': 'CompareIn', 'children': [25, 26]}
3395:{'type': 'orelse', 'children': [35]}
3395:{'type': 'Call', 'children': [37, 40]}
3396:{'type': 'Module', 'children': [1]}
3396:{'type': 'NameParam', 'value': 'self'}
3396:{'type': 'Call', 'children': [15, 16]}
3396:{'type': 'body', 'children': [21]}
3396:{'type': 'comprehension', 'children': [31, 32, 33]}
3396:{'type': 'NameStore', 'value': 'i'}
3397:{'type': 'arguments', 'children': [7, 10]}
3397:{'type': 'body', 'children': [12, 21, 24, 46, 49, 67]}
3397:{'type': 'CompareEq', 'children': [14, 17]}
3397:{'type': 'Call', 'children': [15, 16]}
3397:{'type': 'NameLoad', 'value': 'nums'}
3397:{'type': 'Assign', 'children': [22, 23]}
3397:{'type': 'NameStore', 'value': 'd'}
3397:{'type': 'Dict'}
3397:{'type': 'NameStore', 'value': 'n'}
3397:{'type': 'NameLoad', 'value': 'nums'}
3397:{'type': 'NameLoad', 'value': 'd'}
3397:{'type': 'NameLoad', 'value': 'd'}
3397:{'type': 'Index', 'children': [37]}
3397:{'type': 'NameLoad', 'value': 'n'}
3397:{'type': 'Num', 'value': '1'}
3397:{'type': 'AugAssignAdd', 'children': [41, 45]}
3397:{'type': 'NameLoad', 'value': 'd'}
3397:{'type': 'Index', 'children': [44]}
3397:{'type': 'Assign', 'children': [47, 48]}
3397:{'type': 'NameStore', 'value': 'dupes'}
3397:{'type': 'ListLoad'}
3397:{'type': 'NameLoad', 'value': 'd'}
3397:{'type': 'Num', 'value': '2'}
3397:{'type': 'decorator_list'}
3399:{'type': 'bases', 'children': [3]}
3399:{'type': 'body', 'children': [5]}
3399:{'type': 'defaults'}
3399:{'type': 'Assign', 'children': [13, 14]}
3399:{'type': 'NameStore', 'value': 'nums_set'}
3399:{'type': 'ListLoad'}
3399:{'type': 'NameLoad', 'value': 'i'}
3399:{'type': 'NameLoad', 'value': 'nums_set'}
3399:{'type': 'Expr', 'children': [29]}
3399:{'type': 'Call', 'children': [30, 33]}
3399:{'type': 'NameLoad', 'value': 'i'}
3399:{'type': 'Call', 'children': [36, 39]}
3399:{'type': 'AttributeLoad', 'children': [37, 38]}
3399:{'type': 'NameLoad', 'value': 'nums_set'}
3399:{'type': 'attr', 'value': 'add'}
3399:{'type': 'NameLoad', 'value': 'i'}
3399:{'type': 'decorator_list'}
3401:{'type': 'body', 'children': [5]}
3401:{'type': 'FunctionDef', 'children': [6, 11, 42], 'value': 'findDuplicates'}
3401:{'type': 'arguments', 'children': [7, 10]}
3401:{'type': 'args', 'children': [8, 9]}
3401:{'type': 'Call', 'children': [15]}
3401:{'type': 'NameLoad', 'value': 'set'}
3401:{'type': 'Assign', 'children': [17, 18]}
3401:{'type': 'NameStore', 'value': 'res'}
3401:{'type': 'CompareIn', 'children': [25, 26]}
3401:{'type': 'NameLoad', 'value': 'i'}
3401:{'type': 'NameLoad', 'value': 'nums_set'}
3401:{'type': 'Call', 'children': [30, 33]}
3401:{'type': 'NameLoad', 'value': 'res'}
3401:{'type': 'attr', 'value': 'append'}
3401:{'type': 'NameLoad', 'value': 'nums_set'}
3401:{'type': 'attr', 'value': 'add'}
3404:{'type': 'bases', 'children': [3]}
3404:{'type': 'NameParam', 'value': 'nums'}
3404:{'type': 'SubscriptLoad', 'children': [22, 23]}
3404:{'type': 'NameLoad', 'value': 'num'}
3404:{'type': 'Num', 'value': '-1'}
3406:{'type': 'Module', 'children': [1]}
3406:{'type': 'NameLoad', 'value': 'object'}
3406:{'type': 'body', 'children': [5]}
3406:{'type': 'FunctionDef', 'children': [6, 11, 64], 'value': 'findDuplicates'}
3406:{'type': 'args', 'children': [8, 9]}
3406:{'type': 'body', 'children': [12, 15, 62]}
3406:{'type': 'NameStore', 'value': 'res'}
3406:{'type': 'ListLoad'}
3406:{'type': 'For', 'children': [16, 17, 22]}
3406:{'type': 'NameStore', 'value': 'i'}
3406:{'type': 'Call', 'children': [20, 21]}
3406:{'type': 'If', 'children': [24, 37]}
3406:{'type': 'CompareLt', 'children': [25, 36]}
3406:{'type': 'Index', 'children': [28]}
3406:{'type': 'BinOpSub', 'children': [29, 35]}
